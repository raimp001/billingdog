{"ast":null,"code":"\"use strict\";\n\n// Copyright (c) 2018-2024 Coinbase, Inc. <https://www.coinbase.com/>\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CoinbaseWalletSDK = void 0;\nconst wallet_logo_1 = require(\"./assets/wallet-logo\");\nconst CoinbaseWalletProvider_1 = require(\"./CoinbaseWalletProvider\");\nconst ScopedLocalStorage_1 = require(\"./util/ScopedLocalStorage\");\nconst version_1 = require(\"./version\");\nconst util_1 = require(\"./core/type/util\");\nconst provider_1 = require(\"./util/provider\");\nclass CoinbaseWalletSDK {\n  constructor(metadata) {\n    this.metadata = {\n      appName: metadata.appName || 'Dapp',\n      appLogoUrl: metadata.appLogoUrl || (0, util_1.getFavicon)(),\n      appChainIds: metadata.appChainIds || []\n    };\n    this.storeLatestVersion();\n  }\n  makeWeb3Provider(preference = {\n    options: 'all'\n  }) {\n    var _a;\n    const params = {\n      metadata: this.metadata,\n      preference\n    };\n    return (_a = (0, provider_1.getCoinbaseInjectedProvider)(params)) !== null && _a !== void 0 ? _a : new CoinbaseWalletProvider_1.CoinbaseWalletProvider(params);\n  }\n  /**\n   * Official Coinbase Wallet logo for developers to use on their frontend\n   * @param type Type of wallet logo: \"standard\" | \"circle\" | \"text\" | \"textWithLogo\" | \"textLight\" | \"textWithLogoLight\"\n   * @param width Width of the logo (Optional)\n   * @returns SVG Data URI\n   */\n  getCoinbaseWalletLogo(type, width = 240) {\n    return (0, wallet_logo_1.walletLogo)(type, width);\n  }\n  storeLatestVersion() {\n    const versionStorage = new ScopedLocalStorage_1.ScopedLocalStorage('CBWSDK');\n    versionStorage.setItem('VERSION', version_1.LIB_VERSION);\n  }\n}\nexports.CoinbaseWalletSDK = CoinbaseWalletSDK;","map":{"version":3,"names":["Object","defineProperty","exports","value","CoinbaseWalletSDK","wallet_logo_1","require","CoinbaseWalletProvider_1","ScopedLocalStorage_1","version_1","util_1","provider_1","constructor","metadata","appName","appLogoUrl","getFavicon","appChainIds","storeLatestVersion","makeWeb3Provider","preference","options","_a","params","getCoinbaseInjectedProvider","CoinbaseWalletProvider","getCoinbaseWalletLogo","type","width","walletLogo","versionStorage","ScopedLocalStorage","setItem","LIB_VERSION"],"sources":["/Users/shardingdog/billingdog/node_modules/@coinbase/wallet-sdk/dist/CoinbaseWalletSDK.js"],"sourcesContent":["\"use strict\";\n// Copyright (c) 2018-2024 Coinbase, Inc. <https://www.coinbase.com/>\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CoinbaseWalletSDK = void 0;\nconst wallet_logo_1 = require(\"./assets/wallet-logo\");\nconst CoinbaseWalletProvider_1 = require(\"./CoinbaseWalletProvider\");\nconst ScopedLocalStorage_1 = require(\"./util/ScopedLocalStorage\");\nconst version_1 = require(\"./version\");\nconst util_1 = require(\"./core/type/util\");\nconst provider_1 = require(\"./util/provider\");\nclass CoinbaseWalletSDK {\n    constructor(metadata) {\n        this.metadata = {\n            appName: metadata.appName || 'Dapp',\n            appLogoUrl: metadata.appLogoUrl || (0, util_1.getFavicon)(),\n            appChainIds: metadata.appChainIds || [],\n        };\n        this.storeLatestVersion();\n    }\n    makeWeb3Provider(preference = { options: 'all' }) {\n        var _a;\n        const params = { metadata: this.metadata, preference };\n        return (_a = (0, provider_1.getCoinbaseInjectedProvider)(params)) !== null && _a !== void 0 ? _a : new CoinbaseWalletProvider_1.CoinbaseWalletProvider(params);\n    }\n    /**\n     * Official Coinbase Wallet logo for developers to use on their frontend\n     * @param type Type of wallet logo: \"standard\" | \"circle\" | \"text\" | \"textWithLogo\" | \"textLight\" | \"textWithLogoLight\"\n     * @param width Width of the logo (Optional)\n     * @returns SVG Data URI\n     */\n    getCoinbaseWalletLogo(type, width = 240) {\n        return (0, wallet_logo_1.walletLogo)(type, width);\n    }\n    storeLatestVersion() {\n        const versionStorage = new ScopedLocalStorage_1.ScopedLocalStorage('CBWSDK');\n        versionStorage.setItem('VERSION', version_1.LIB_VERSION);\n    }\n}\nexports.CoinbaseWalletSDK = CoinbaseWalletSDK;\n"],"mappings":"AAAA,YAAY;;AACZ;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,iBAAiB,GAAG,KAAK,CAAC;AAClC,MAAMC,aAAa,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AACrD,MAAMC,wBAAwB,GAAGD,OAAO,CAAC,0BAA0B,CAAC;AACpE,MAAME,oBAAoB,GAAGF,OAAO,CAAC,2BAA2B,CAAC;AACjE,MAAMG,SAAS,GAAGH,OAAO,CAAC,WAAW,CAAC;AACtC,MAAMI,MAAM,GAAGJ,OAAO,CAAC,kBAAkB,CAAC;AAC1C,MAAMK,UAAU,GAAGL,OAAO,CAAC,iBAAiB,CAAC;AAC7C,MAAMF,iBAAiB,CAAC;EACpBQ,WAAWA,CAACC,QAAQ,EAAE;IAClB,IAAI,CAACA,QAAQ,GAAG;MACZC,OAAO,EAAED,QAAQ,CAACC,OAAO,IAAI,MAAM;MACnCC,UAAU,EAAEF,QAAQ,CAACE,UAAU,IAAI,CAAC,CAAC,EAAEL,MAAM,CAACM,UAAU,EAAE,CAAC;MAC3DC,WAAW,EAAEJ,QAAQ,CAACI,WAAW,IAAI;IACzC,CAAC;IACD,IAAI,CAACC,kBAAkB,CAAC,CAAC;EAC7B;EACAC,gBAAgBA,CAACC,UAAU,GAAG;IAAEC,OAAO,EAAE;EAAM,CAAC,EAAE;IAC9C,IAAIC,EAAE;IACN,MAAMC,MAAM,GAAG;MAAEV,QAAQ,EAAE,IAAI,CAACA,QAAQ;MAAEO;IAAW,CAAC;IACtD,OAAO,CAACE,EAAE,GAAG,CAAC,CAAC,EAAEX,UAAU,CAACa,2BAA2B,EAAED,MAAM,CAAC,MAAM,IAAI,IAAID,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,IAAIf,wBAAwB,CAACkB,sBAAsB,CAACF,MAAM,CAAC;EAClK;EACA;AACJ;AACA;AACA;AACA;AACA;EACIG,qBAAqBA,CAACC,IAAI,EAAEC,KAAK,GAAG,GAAG,EAAE;IACrC,OAAO,CAAC,CAAC,EAAEvB,aAAa,CAACwB,UAAU,EAAEF,IAAI,EAAEC,KAAK,CAAC;EACrD;EACAV,kBAAkBA,CAAA,EAAG;IACjB,MAAMY,cAAc,GAAG,IAAItB,oBAAoB,CAACuB,kBAAkB,CAAC,QAAQ,CAAC;IAC5ED,cAAc,CAACE,OAAO,CAAC,SAAS,EAAEvB,SAAS,CAACwB,WAAW,CAAC;EAC5D;AACJ;AACA/B,OAAO,CAACE,iBAAiB,GAAGA,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}