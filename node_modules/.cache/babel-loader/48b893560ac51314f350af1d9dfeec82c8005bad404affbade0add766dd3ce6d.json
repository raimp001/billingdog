{"ast":null,"code":"\"use strict\";\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n// Copyright (c) 2018-2023 Coinbase, Inc. <https://www.coinbase.com/>\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.areAddressArraysEqual = exports.getFavicon = exports.range = exports.isBigNumber = exports.ensureParsedJSONObject = exports.ensureBigInt = exports.ensureRegExpString = exports.ensureIntNumber = exports.ensureBuffer = exports.ensureAddressString = exports.ensureEvenLengthHexString = exports.ensureHexString = exports.isHexString = exports.prepend0x = exports.strip0x = exports.has0xPrefix = exports.hexStringFromIntNumber = exports.intNumberFromHexString = exports.bigIntStringFromBigInt = exports.hexStringFromBuffer = exports.hexStringToUint8Array = exports.uint8ArrayToHex = exports.randomBytesHex = void 0;\nconst error_1 = require(\"../error\");\nconst _1 = require(\".\");\nconst INT_STRING_REGEX = /^[0-9]*$/;\nconst HEXADECIMAL_STRING_REGEX = /^[a-f0-9]*$/;\n/**\n * @param length number of bytes\n */\nfunction randomBytesHex(length) {\n  return uint8ArrayToHex(crypto.getRandomValues(new Uint8Array(length)));\n}\nexports.randomBytesHex = randomBytesHex;\nfunction uint8ArrayToHex(value) {\n  return [...value].map(b => b.toString(16).padStart(2, '0')).join('');\n}\nexports.uint8ArrayToHex = uint8ArrayToHex;\nfunction hexStringToUint8Array(hexString) {\n  return new Uint8Array(hexString.match(/.{1,2}/g).map(byte => parseInt(byte, 16)));\n}\nexports.hexStringToUint8Array = hexStringToUint8Array;\nfunction hexStringFromBuffer(buf) {\n  let includePrefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  const hex = buf.toString('hex');\n  return (0, _1.HexString)(includePrefix ? \"0x\".concat(hex) : hex);\n}\nexports.hexStringFromBuffer = hexStringFromBuffer;\nfunction bigIntStringFromBigInt(bi) {\n  return (0, _1.BigIntString)(bi.toString(10));\n}\nexports.bigIntStringFromBigInt = bigIntStringFromBigInt;\nfunction intNumberFromHexString(hex) {\n  return (0, _1.IntNumber)(Number(BigInt(ensureEvenLengthHexString(hex, true))));\n}\nexports.intNumberFromHexString = intNumberFromHexString;\nfunction hexStringFromIntNumber(num) {\n  return (0, _1.HexString)(\"0x\".concat(BigInt(num).toString(16)));\n}\nexports.hexStringFromIntNumber = hexStringFromIntNumber;\nfunction has0xPrefix(str) {\n  return str.startsWith('0x') || str.startsWith('0X');\n}\nexports.has0xPrefix = has0xPrefix;\nfunction strip0x(hex) {\n  if (has0xPrefix(hex)) {\n    return hex.slice(2);\n  }\n  return hex;\n}\nexports.strip0x = strip0x;\nfunction prepend0x(hex) {\n  if (has0xPrefix(hex)) {\n    return \"0x\".concat(hex.slice(2));\n  }\n  return \"0x\".concat(hex);\n}\nexports.prepend0x = prepend0x;\nfunction isHexString(hex) {\n  if (typeof hex !== 'string') {\n    return false;\n  }\n  const s = strip0x(hex).toLowerCase();\n  return HEXADECIMAL_STRING_REGEX.test(s);\n}\nexports.isHexString = isHexString;\nfunction ensureHexString(hex) {\n  let includePrefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  if (typeof hex === 'string') {\n    const s = strip0x(hex).toLowerCase();\n    if (HEXADECIMAL_STRING_REGEX.test(s)) {\n      return (0, _1.HexString)(includePrefix ? \"0x\".concat(s) : s);\n    }\n  }\n  throw error_1.standardErrors.rpc.invalidParams(\"\\\"\".concat(String(hex), \"\\\" is not a hexadecimal string\"));\n}\nexports.ensureHexString = ensureHexString;\nfunction ensureEvenLengthHexString(hex) {\n  let includePrefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  let h = ensureHexString(hex, false);\n  if (h.length % 2 === 1) {\n    h = (0, _1.HexString)(\"0\".concat(h));\n  }\n  return includePrefix ? (0, _1.HexString)(\"0x\".concat(h)) : h;\n}\nexports.ensureEvenLengthHexString = ensureEvenLengthHexString;\nfunction ensureAddressString(str) {\n  if (typeof str === 'string') {\n    const s = strip0x(str).toLowerCase();\n    if (isHexString(s) && s.length === 40) {\n      return (0, _1.AddressString)(prepend0x(s));\n    }\n  }\n  throw error_1.standardErrors.rpc.invalidParams(\"Invalid Ethereum address: \".concat(String(str)));\n}\nexports.ensureAddressString = ensureAddressString;\nfunction ensureBuffer(str) {\n  if (Buffer.isBuffer(str)) {\n    return str;\n  }\n  if (typeof str === 'string') {\n    if (isHexString(str)) {\n      const s = ensureEvenLengthHexString(str, false);\n      return Buffer.from(s, 'hex');\n    }\n    return Buffer.from(str, 'utf8');\n  }\n  throw error_1.standardErrors.rpc.invalidParams(\"Not binary data: \".concat(String(str)));\n}\nexports.ensureBuffer = ensureBuffer;\nfunction ensureIntNumber(num) {\n  if (typeof num === 'number' && Number.isInteger(num)) {\n    return (0, _1.IntNumber)(num);\n  }\n  if (typeof num === 'string') {\n    if (INT_STRING_REGEX.test(num)) {\n      return (0, _1.IntNumber)(Number(num));\n    }\n    if (isHexString(num)) {\n      return (0, _1.IntNumber)(Number(BigInt(ensureEvenLengthHexString(num, true))));\n    }\n  }\n  throw error_1.standardErrors.rpc.invalidParams(\"Not an integer: \".concat(String(num)));\n}\nexports.ensureIntNumber = ensureIntNumber;\nfunction ensureRegExpString(regExp) {\n  if (regExp instanceof RegExp) {\n    return (0, _1.RegExpString)(regExp.toString());\n  }\n  throw error_1.standardErrors.rpc.invalidParams(\"Not a RegExp: \".concat(String(regExp)));\n}\nexports.ensureRegExpString = ensureRegExpString;\nfunction ensureBigInt(val) {\n  if (val !== null && (typeof val === 'bigint' || isBigNumber(val))) {\n    return BigInt(val.toString(10));\n  }\n  if (typeof val === 'number') {\n    return BigInt(ensureIntNumber(val));\n  }\n  if (typeof val === 'string') {\n    if (INT_STRING_REGEX.test(val)) {\n      return BigInt(val);\n    }\n    if (isHexString(val)) {\n      return BigInt(ensureEvenLengthHexString(val, true));\n    }\n  }\n  throw error_1.standardErrors.rpc.invalidParams(\"Not an integer: \".concat(String(val)));\n}\nexports.ensureBigInt = ensureBigInt;\nfunction ensureParsedJSONObject(val) {\n  if (typeof val === 'string') {\n    return JSON.parse(val);\n  }\n  if (typeof val === 'object') {\n    return val;\n  }\n  throw error_1.standardErrors.rpc.invalidParams(\"Not a JSON string or an object: \".concat(String(val)));\n}\nexports.ensureParsedJSONObject = ensureParsedJSONObject;\nfunction isBigNumber(val) {\n  if (val == null || typeof val.constructor !== 'function') {\n    return false;\n  }\n  const {\n    constructor\n  } = val;\n  return typeof constructor.config === 'function' && typeof constructor.EUCLID === 'number';\n}\nexports.isBigNumber = isBigNumber;\nfunction range(start, stop) {\n  return Array.from({\n    length: stop - start\n  }, (_, i) => start + i);\n}\nexports.range = range;\nfunction getFavicon() {\n  const el = document.querySelector('link[sizes=\"192x192\"]') || document.querySelector('link[sizes=\"180x180\"]') || document.querySelector('link[rel=\"icon\"]') || document.querySelector('link[rel=\"shortcut icon\"]');\n  const {\n    protocol,\n    host\n  } = document.location;\n  const href = el ? el.getAttribute('href') : null;\n  if (!href || href.startsWith('javascript:') || href.startsWith('vbscript:')) {\n    return null;\n  }\n  if (href.startsWith('http://') || href.startsWith('https://') || href.startsWith('data:')) {\n    return href;\n  }\n  if (href.startsWith('//')) {\n    return protocol + href;\n  }\n  return \"\".concat(protocol, \"//\").concat(host).concat(href);\n}\nexports.getFavicon = getFavicon;\nfunction areAddressArraysEqual(arr1, arr2) {\n  return arr1.length === arr2.length && arr1.every((value, index) => value === arr2[index]);\n}\nexports.areAddressArraysEqual = areAddressArraysEqual;","map":{"version":3,"names":["Object","defineProperty","exports","value","areAddressArraysEqual","getFavicon","range","isBigNumber","ensureParsedJSONObject","ensureBigInt","ensureRegExpString","ensureIntNumber","ensureBuffer","ensureAddressString","ensureEvenLengthHexString","ensureHexString","isHexString","prepend0x","strip0x","has0xPrefix","hexStringFromIntNumber","intNumberFromHexString","bigIntStringFromBigInt","hexStringFromBuffer","hexStringToUint8Array","uint8ArrayToHex","randomBytesHex","error_1","require","_1","INT_STRING_REGEX","HEXADECIMAL_STRING_REGEX","length","crypto","getRandomValues","Uint8Array","map","b","toString","padStart","join","hexString","match","byte","parseInt","buf","includePrefix","arguments","undefined","hex","HexString","concat","bi","BigIntString","IntNumber","Number","BigInt","num","str","startsWith","slice","s","toLowerCase","test","standardErrors","rpc","invalidParams","String","h","AddressString","Buffer","isBuffer","from","isInteger","regExp","RegExp","RegExpString","val","JSON","parse","constructor","config","EUCLID","start","stop","Array","_","i","el","document","querySelector","protocol","host","location","href","getAttribute","arr1","arr2","every","index"],"sources":["/Users/shardingdog/billingdog/node_modules/@coinbase/wallet-sdk/dist/core/type/util.js"],"sourcesContent":["\"use strict\";\n/* eslint-disable @typescript-eslint/no-explicit-any */\n// Copyright (c) 2018-2023 Coinbase, Inc. <https://www.coinbase.com/>\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.areAddressArraysEqual = exports.getFavicon = exports.range = exports.isBigNumber = exports.ensureParsedJSONObject = exports.ensureBigInt = exports.ensureRegExpString = exports.ensureIntNumber = exports.ensureBuffer = exports.ensureAddressString = exports.ensureEvenLengthHexString = exports.ensureHexString = exports.isHexString = exports.prepend0x = exports.strip0x = exports.has0xPrefix = exports.hexStringFromIntNumber = exports.intNumberFromHexString = exports.bigIntStringFromBigInt = exports.hexStringFromBuffer = exports.hexStringToUint8Array = exports.uint8ArrayToHex = exports.randomBytesHex = void 0;\nconst error_1 = require(\"../error\");\nconst _1 = require(\".\");\nconst INT_STRING_REGEX = /^[0-9]*$/;\nconst HEXADECIMAL_STRING_REGEX = /^[a-f0-9]*$/;\n/**\n * @param length number of bytes\n */\nfunction randomBytesHex(length) {\n    return uint8ArrayToHex(crypto.getRandomValues(new Uint8Array(length)));\n}\nexports.randomBytesHex = randomBytesHex;\nfunction uint8ArrayToHex(value) {\n    return [...value].map((b) => b.toString(16).padStart(2, '0')).join('');\n}\nexports.uint8ArrayToHex = uint8ArrayToHex;\nfunction hexStringToUint8Array(hexString) {\n    return new Uint8Array(hexString.match(/.{1,2}/g).map((byte) => parseInt(byte, 16)));\n}\nexports.hexStringToUint8Array = hexStringToUint8Array;\nfunction hexStringFromBuffer(buf, includePrefix = false) {\n    const hex = buf.toString('hex');\n    return (0, _1.HexString)(includePrefix ? `0x${hex}` : hex);\n}\nexports.hexStringFromBuffer = hexStringFromBuffer;\nfunction bigIntStringFromBigInt(bi) {\n    return (0, _1.BigIntString)(bi.toString(10));\n}\nexports.bigIntStringFromBigInt = bigIntStringFromBigInt;\nfunction intNumberFromHexString(hex) {\n    return (0, _1.IntNumber)(Number(BigInt(ensureEvenLengthHexString(hex, true))));\n}\nexports.intNumberFromHexString = intNumberFromHexString;\nfunction hexStringFromIntNumber(num) {\n    return (0, _1.HexString)(`0x${BigInt(num).toString(16)}`);\n}\nexports.hexStringFromIntNumber = hexStringFromIntNumber;\nfunction has0xPrefix(str) {\n    return str.startsWith('0x') || str.startsWith('0X');\n}\nexports.has0xPrefix = has0xPrefix;\nfunction strip0x(hex) {\n    if (has0xPrefix(hex)) {\n        return hex.slice(2);\n    }\n    return hex;\n}\nexports.strip0x = strip0x;\nfunction prepend0x(hex) {\n    if (has0xPrefix(hex)) {\n        return `0x${hex.slice(2)}`;\n    }\n    return `0x${hex}`;\n}\nexports.prepend0x = prepend0x;\nfunction isHexString(hex) {\n    if (typeof hex !== 'string') {\n        return false;\n    }\n    const s = strip0x(hex).toLowerCase();\n    return HEXADECIMAL_STRING_REGEX.test(s);\n}\nexports.isHexString = isHexString;\nfunction ensureHexString(hex, includePrefix = false) {\n    if (typeof hex === 'string') {\n        const s = strip0x(hex).toLowerCase();\n        if (HEXADECIMAL_STRING_REGEX.test(s)) {\n            return (0, _1.HexString)(includePrefix ? `0x${s}` : s);\n        }\n    }\n    throw error_1.standardErrors.rpc.invalidParams(`\"${String(hex)}\" is not a hexadecimal string`);\n}\nexports.ensureHexString = ensureHexString;\nfunction ensureEvenLengthHexString(hex, includePrefix = false) {\n    let h = ensureHexString(hex, false);\n    if (h.length % 2 === 1) {\n        h = (0, _1.HexString)(`0${h}`);\n    }\n    return includePrefix ? (0, _1.HexString)(`0x${h}`) : h;\n}\nexports.ensureEvenLengthHexString = ensureEvenLengthHexString;\nfunction ensureAddressString(str) {\n    if (typeof str === 'string') {\n        const s = strip0x(str).toLowerCase();\n        if (isHexString(s) && s.length === 40) {\n            return (0, _1.AddressString)(prepend0x(s));\n        }\n    }\n    throw error_1.standardErrors.rpc.invalidParams(`Invalid Ethereum address: ${String(str)}`);\n}\nexports.ensureAddressString = ensureAddressString;\nfunction ensureBuffer(str) {\n    if (Buffer.isBuffer(str)) {\n        return str;\n    }\n    if (typeof str === 'string') {\n        if (isHexString(str)) {\n            const s = ensureEvenLengthHexString(str, false);\n            return Buffer.from(s, 'hex');\n        }\n        return Buffer.from(str, 'utf8');\n    }\n    throw error_1.standardErrors.rpc.invalidParams(`Not binary data: ${String(str)}`);\n}\nexports.ensureBuffer = ensureBuffer;\nfunction ensureIntNumber(num) {\n    if (typeof num === 'number' && Number.isInteger(num)) {\n        return (0, _1.IntNumber)(num);\n    }\n    if (typeof num === 'string') {\n        if (INT_STRING_REGEX.test(num)) {\n            return (0, _1.IntNumber)(Number(num));\n        }\n        if (isHexString(num)) {\n            return (0, _1.IntNumber)(Number(BigInt(ensureEvenLengthHexString(num, true))));\n        }\n    }\n    throw error_1.standardErrors.rpc.invalidParams(`Not an integer: ${String(num)}`);\n}\nexports.ensureIntNumber = ensureIntNumber;\nfunction ensureRegExpString(regExp) {\n    if (regExp instanceof RegExp) {\n        return (0, _1.RegExpString)(regExp.toString());\n    }\n    throw error_1.standardErrors.rpc.invalidParams(`Not a RegExp: ${String(regExp)}`);\n}\nexports.ensureRegExpString = ensureRegExpString;\nfunction ensureBigInt(val) {\n    if (val !== null && (typeof val === 'bigint' || isBigNumber(val))) {\n        return BigInt(val.toString(10));\n    }\n    if (typeof val === 'number') {\n        return BigInt(ensureIntNumber(val));\n    }\n    if (typeof val === 'string') {\n        if (INT_STRING_REGEX.test(val)) {\n            return BigInt(val);\n        }\n        if (isHexString(val)) {\n            return BigInt(ensureEvenLengthHexString(val, true));\n        }\n    }\n    throw error_1.standardErrors.rpc.invalidParams(`Not an integer: ${String(val)}`);\n}\nexports.ensureBigInt = ensureBigInt;\nfunction ensureParsedJSONObject(val) {\n    if (typeof val === 'string') {\n        return JSON.parse(val);\n    }\n    if (typeof val === 'object') {\n        return val;\n    }\n    throw error_1.standardErrors.rpc.invalidParams(`Not a JSON string or an object: ${String(val)}`);\n}\nexports.ensureParsedJSONObject = ensureParsedJSONObject;\nfunction isBigNumber(val) {\n    if (val == null || typeof val.constructor !== 'function') {\n        return false;\n    }\n    const { constructor } = val;\n    return typeof constructor.config === 'function' && typeof constructor.EUCLID === 'number';\n}\nexports.isBigNumber = isBigNumber;\nfunction range(start, stop) {\n    return Array.from({ length: stop - start }, (_, i) => start + i);\n}\nexports.range = range;\nfunction getFavicon() {\n    const el = document.querySelector('link[sizes=\"192x192\"]') ||\n        document.querySelector('link[sizes=\"180x180\"]') ||\n        document.querySelector('link[rel=\"icon\"]') ||\n        document.querySelector('link[rel=\"shortcut icon\"]');\n    const { protocol, host } = document.location;\n    const href = el ? el.getAttribute('href') : null;\n    if (!href || href.startsWith('javascript:') || href.startsWith('vbscript:')) {\n        return null;\n    }\n    if (href.startsWith('http://') || href.startsWith('https://') || href.startsWith('data:')) {\n        return href;\n    }\n    if (href.startsWith('//')) {\n        return protocol + href;\n    }\n    return `${protocol}//${host}${href}`;\n}\nexports.getFavicon = getFavicon;\nfunction areAddressArraysEqual(arr1, arr2) {\n    return arr1.length === arr2.length && arr1.every((value, index) => value === arr2[index]);\n}\nexports.areAddressArraysEqual = areAddressArraysEqual;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}