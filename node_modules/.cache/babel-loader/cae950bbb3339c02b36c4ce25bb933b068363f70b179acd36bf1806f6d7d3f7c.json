{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.determineMethodCategory = void 0;\nconst mapping = {\n  handshake: ['eth_requestAccounts'],\n  sign: ['eth_ecRecover', 'personal_sign', 'personal_ecRecover', 'eth_signTransaction', 'eth_sendTransaction', 'eth_signTypedData_v1', 'eth_signTypedData_v3', 'eth_signTypedData_v4', 'eth_signTypedData', 'wallet_addEthereumChain', 'wallet_switchEthereumChain', 'wallet_watchAsset', 'wallet_getCapabilities', 'wallet_sendCalls', 'wallet_showCallsStatus'],\n  state: [\n  // internal state\n  'eth_chainId', 'eth_accounts', 'eth_coinbase', 'net_version'],\n  deprecated: ['eth_sign', 'eth_signTypedData_v2'],\n  unsupported: ['eth_subscribe', 'eth_unsubscribe'],\n  fetch: []\n};\nfunction determineMethodCategory(method) {\n  for (const c in mapping) {\n    const category = c;\n    if (mapping[category].includes(method)) {\n      return category;\n    }\n  }\n  return undefined;\n}\nexports.determineMethodCategory = determineMethodCategory;","map":{"version":3,"names":["Object","defineProperty","exports","value","determineMethodCategory","mapping","handshake","sign","state","deprecated","unsupported","fetch","method","c","category","includes","undefined"],"sources":["/Users/shardingdog/billingdog/node_modules/@coinbase/wallet-sdk/dist/core/provider/method.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.determineMethodCategory = void 0;\nconst mapping = {\n    handshake: ['eth_requestAccounts'],\n    sign: [\n        'eth_ecRecover',\n        'personal_sign',\n        'personal_ecRecover',\n        'eth_signTransaction',\n        'eth_sendTransaction',\n        'eth_signTypedData_v1',\n        'eth_signTypedData_v3',\n        'eth_signTypedData_v4',\n        'eth_signTypedData',\n        'wallet_addEthereumChain',\n        'wallet_switchEthereumChain',\n        'wallet_watchAsset',\n        'wallet_getCapabilities',\n        'wallet_sendCalls',\n        'wallet_showCallsStatus',\n    ],\n    state: [\n        // internal state\n        'eth_chainId',\n        'eth_accounts',\n        'eth_coinbase',\n        'net_version',\n    ],\n    deprecated: ['eth_sign', 'eth_signTypedData_v2'],\n    unsupported: ['eth_subscribe', 'eth_unsubscribe'],\n    fetch: [],\n};\nfunction determineMethodCategory(method) {\n    for (const c in mapping) {\n        const category = c;\n        if (mapping[category].includes(method)) {\n            return category;\n        }\n    }\n    return undefined;\n}\nexports.determineMethodCategory = determineMethodCategory;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,uBAAuB,GAAG,KAAK,CAAC;AACxC,MAAMC,OAAO,GAAG;EACZC,SAAS,EAAE,CAAC,qBAAqB,CAAC;EAClCC,IAAI,EAAE,CACF,eAAe,EACf,eAAe,EACf,oBAAoB,EACpB,qBAAqB,EACrB,qBAAqB,EACrB,sBAAsB,EACtB,sBAAsB,EACtB,sBAAsB,EACtB,mBAAmB,EACnB,yBAAyB,EACzB,4BAA4B,EAC5B,mBAAmB,EACnB,wBAAwB,EACxB,kBAAkB,EAClB,wBAAwB,CAC3B;EACDC,KAAK,EAAE;EACH;EACA,aAAa,EACb,cAAc,EACd,cAAc,EACd,aAAa,CAChB;EACDC,UAAU,EAAE,CAAC,UAAU,EAAE,sBAAsB,CAAC;EAChDC,WAAW,EAAE,CAAC,eAAe,EAAE,iBAAiB,CAAC;EACjDC,KAAK,EAAE;AACX,CAAC;AACD,SAASP,uBAAuBA,CAACQ,MAAM,EAAE;EACrC,KAAK,MAAMC,CAAC,IAAIR,OAAO,EAAE;IACrB,MAAMS,QAAQ,GAAGD,CAAC;IAClB,IAAIR,OAAO,CAACS,QAAQ,CAAC,CAACC,QAAQ,CAACH,MAAM,CAAC,EAAE;MACpC,OAAOE,QAAQ;IACnB;EACJ;EACA,OAAOE,SAAS;AACpB;AACAd,OAAO,CAACE,uBAAuB,GAAGA,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}