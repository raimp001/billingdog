{"ast":null,"code":"import axios from'axios';const api=axios.create({baseURL:process.env.REACT_APP_API_URL||'http://localhost:3001'// Update with your backend URL if different\n});export const submitTransaction=async transaction=>{try{const response=await api.post('/submit-transaction',transaction);return response.data;}catch(error){console.error('Error submitting transaction:',error);throw error;}};export const getTransactions=async()=>{try{const response=await api.get('/transactions');return response.data;}catch(error){console.error('Error fetching transactions:',error);throw error;}};export const searchICDCodes=async query=>{try{const response=await axios.get(\"https://clinicaltables.nlm.nih.gov/api/icd10cm/v3/search?q=\".concat(query));// Replace with actual API\nreturn response.data;}catch(error){console.error('Error fetching ICD codes:',error);throw error;}};","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","submitTransaction","transaction","response","post","data","error","console","getTransactions","get","searchICDCodes","query","concat"],"sources":["/Users/shardingdog/billingdog/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:3001', // Update with your backend URL if different\n});\n\nexport const submitTransaction = async (transaction) => {\n  try {\n    const response = await api.post('/submit-transaction', transaction);\n    return response.data;\n  } catch (error) {\n    console.error('Error submitting transaction:', error);\n    throw error;\n  }\n};\n\nexport const getTransactions = async () => {\n  try {\n    const response = await api.get('/transactions');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching transactions:', error);\n    throw error;\n  }\n};\n\nexport const searchICDCodes = async (query) => {\n  try {\n    const response = await axios.get(`https://clinicaltables.nlm.nih.gov/api/icd10cm/v3/search?q=${query}`); // Replace with actual API\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching ICD codes:', error);\n    throw error;\n  }\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,GAAG,CAAGD,KAAK,CAACE,MAAM,CAAC,CACvBC,OAAO,CAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAI,uBAAyB;AACrE,CAAC,CAAC,CAEF,MAAO,MAAM,CAAAC,iBAAiB,CAAG,KAAO,CAAAC,WAAW,EAAK,CACtD,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAR,GAAG,CAACS,IAAI,CAAC,qBAAqB,CAAEF,WAAW,CAAC,CACnE,MAAO,CAAAC,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,CAAEA,KAAK,CAAC,CACrD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED,MAAO,MAAM,CAAAE,eAAe,CAAG,KAAAA,CAAA,GAAY,CACzC,GAAI,CACF,KAAM,CAAAL,QAAQ,CAAG,KAAM,CAAAR,GAAG,CAACc,GAAG,CAAC,eAAe,CAAC,CAC/C,MAAO,CAAAN,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACpD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED,MAAO,MAAM,CAAAI,cAAc,CAAG,KAAO,CAAAC,KAAK,EAAK,CAC7C,GAAI,CACF,KAAM,CAAAR,QAAQ,CAAG,KAAM,CAAAT,KAAK,CAACe,GAAG,+DAAAG,MAAA,CAA+DD,KAAK,CAAE,CAAC,CAAE;AACzG,MAAO,CAAAR,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CACjD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}