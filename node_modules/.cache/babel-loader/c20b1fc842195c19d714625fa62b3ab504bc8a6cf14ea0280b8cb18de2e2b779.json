{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SCWKeyManager = void 0;\nconst cipher_1 = require(\"../../util/cipher\");\nconst ScopedLocalStorage_1 = require(\"../../util/ScopedLocalStorage\");\nconst OWN_PRIVATE_KEY = {\n  storageKey: 'ownPrivateKey',\n  keyType: 'private'\n};\nconst OWN_PUBLIC_KEY = {\n  storageKey: 'ownPublicKey',\n  keyType: 'public'\n};\nconst PEER_PUBLIC_KEY = {\n  storageKey: 'peerPublicKey',\n  keyType: 'public'\n};\nclass SCWKeyManager {\n  constructor() {\n    this.storage = new ScopedLocalStorage_1.ScopedLocalStorage('CBWSDK', 'SCWKeyManager');\n    this.ownPrivateKey = null;\n    this.ownPublicKey = null;\n    this.peerPublicKey = null;\n    this.sharedSecret = null;\n  }\n  async getOwnPublicKey() {\n    await this.loadKeysIfNeeded();\n    return this.ownPublicKey;\n  }\n  // returns null if the shared secret is not yet derived\n  async getSharedSecret() {\n    await this.loadKeysIfNeeded();\n    return this.sharedSecret;\n  }\n  async setPeerPublicKey(key) {\n    this.sharedSecret = null;\n    this.peerPublicKey = key;\n    await this.storeKey(PEER_PUBLIC_KEY, key);\n    await this.loadKeysIfNeeded();\n  }\n  async clear() {\n    this.ownPrivateKey = null;\n    this.ownPublicKey = null;\n    this.peerPublicKey = null;\n    this.sharedSecret = null;\n    this.storage.removeItem(OWN_PUBLIC_KEY.storageKey);\n    this.storage.removeItem(OWN_PRIVATE_KEY.storageKey);\n    this.storage.removeItem(PEER_PUBLIC_KEY.storageKey);\n  }\n  async generateKeyPair() {\n    const newKeyPair = await (0, cipher_1.generateKeyPair)();\n    this.ownPrivateKey = newKeyPair.privateKey;\n    this.ownPublicKey = newKeyPair.publicKey;\n    await this.storeKey(OWN_PRIVATE_KEY, newKeyPair.privateKey);\n    await this.storeKey(OWN_PUBLIC_KEY, newKeyPair.publicKey);\n  }\n  async loadKeysIfNeeded() {\n    if (this.ownPrivateKey === null) {\n      this.ownPrivateKey = await this.loadKey(OWN_PRIVATE_KEY);\n    }\n    if (this.ownPublicKey === null) {\n      this.ownPublicKey = await this.loadKey(OWN_PUBLIC_KEY);\n    }\n    if (this.ownPrivateKey === null || this.ownPublicKey === null) {\n      await this.generateKeyPair();\n    }\n    if (this.peerPublicKey === null) {\n      this.peerPublicKey = await this.loadKey(PEER_PUBLIC_KEY);\n    }\n    if (this.sharedSecret === null) {\n      if (this.ownPrivateKey === null || this.peerPublicKey === null) return;\n      this.sharedSecret = await (0, cipher_1.deriveSharedSecret)(this.ownPrivateKey, this.peerPublicKey);\n    }\n  }\n  // storage methods\n  async loadKey(item) {\n    const key = this.storage.getItem(item.storageKey);\n    if (!key) return null;\n    return (0, cipher_1.importKeyFromHexString)(item.keyType, key);\n  }\n  async storeKey(item, key) {\n    const hexString = await (0, cipher_1.exportKeyToHexString)(item.keyType, key);\n    this.storage.setItem(item.storageKey, hexString);\n  }\n}\nexports.SCWKeyManager = SCWKeyManager;","map":{"version":3,"names":["Object","defineProperty","exports","value","SCWKeyManager","cipher_1","require","ScopedLocalStorage_1","OWN_PRIVATE_KEY","storageKey","keyType","OWN_PUBLIC_KEY","PEER_PUBLIC_KEY","constructor","storage","ScopedLocalStorage","ownPrivateKey","ownPublicKey","peerPublicKey","sharedSecret","getOwnPublicKey","loadKeysIfNeeded","getSharedSecret","setPeerPublicKey","key","storeKey","clear","removeItem","generateKeyPair","newKeyPair","privateKey","publicKey","loadKey","deriveSharedSecret","item","getItem","importKeyFromHexString","hexString","exportKeyToHexString","setItem"],"sources":["/Users/shardingdog/billingdog/node_modules/@coinbase/wallet-sdk/dist/sign/scw/SCWKeyManager.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SCWKeyManager = void 0;\nconst cipher_1 = require(\"../../util/cipher\");\nconst ScopedLocalStorage_1 = require(\"../../util/ScopedLocalStorage\");\nconst OWN_PRIVATE_KEY = {\n    storageKey: 'ownPrivateKey',\n    keyType: 'private',\n};\nconst OWN_PUBLIC_KEY = {\n    storageKey: 'ownPublicKey',\n    keyType: 'public',\n};\nconst PEER_PUBLIC_KEY = {\n    storageKey: 'peerPublicKey',\n    keyType: 'public',\n};\nclass SCWKeyManager {\n    constructor() {\n        this.storage = new ScopedLocalStorage_1.ScopedLocalStorage('CBWSDK', 'SCWKeyManager');\n        this.ownPrivateKey = null;\n        this.ownPublicKey = null;\n        this.peerPublicKey = null;\n        this.sharedSecret = null;\n    }\n    async getOwnPublicKey() {\n        await this.loadKeysIfNeeded();\n        return this.ownPublicKey;\n    }\n    // returns null if the shared secret is not yet derived\n    async getSharedSecret() {\n        await this.loadKeysIfNeeded();\n        return this.sharedSecret;\n    }\n    async setPeerPublicKey(key) {\n        this.sharedSecret = null;\n        this.peerPublicKey = key;\n        await this.storeKey(PEER_PUBLIC_KEY, key);\n        await this.loadKeysIfNeeded();\n    }\n    async clear() {\n        this.ownPrivateKey = null;\n        this.ownPublicKey = null;\n        this.peerPublicKey = null;\n        this.sharedSecret = null;\n        this.storage.removeItem(OWN_PUBLIC_KEY.storageKey);\n        this.storage.removeItem(OWN_PRIVATE_KEY.storageKey);\n        this.storage.removeItem(PEER_PUBLIC_KEY.storageKey);\n    }\n    async generateKeyPair() {\n        const newKeyPair = await (0, cipher_1.generateKeyPair)();\n        this.ownPrivateKey = newKeyPair.privateKey;\n        this.ownPublicKey = newKeyPair.publicKey;\n        await this.storeKey(OWN_PRIVATE_KEY, newKeyPair.privateKey);\n        await this.storeKey(OWN_PUBLIC_KEY, newKeyPair.publicKey);\n    }\n    async loadKeysIfNeeded() {\n        if (this.ownPrivateKey === null) {\n            this.ownPrivateKey = await this.loadKey(OWN_PRIVATE_KEY);\n        }\n        if (this.ownPublicKey === null) {\n            this.ownPublicKey = await this.loadKey(OWN_PUBLIC_KEY);\n        }\n        if (this.ownPrivateKey === null || this.ownPublicKey === null) {\n            await this.generateKeyPair();\n        }\n        if (this.peerPublicKey === null) {\n            this.peerPublicKey = await this.loadKey(PEER_PUBLIC_KEY);\n        }\n        if (this.sharedSecret === null) {\n            if (this.ownPrivateKey === null || this.peerPublicKey === null)\n                return;\n            this.sharedSecret = await (0, cipher_1.deriveSharedSecret)(this.ownPrivateKey, this.peerPublicKey);\n        }\n    }\n    // storage methods\n    async loadKey(item) {\n        const key = this.storage.getItem(item.storageKey);\n        if (!key)\n            return null;\n        return (0, cipher_1.importKeyFromHexString)(item.keyType, key);\n    }\n    async storeKey(item, key) {\n        const hexString = await (0, cipher_1.exportKeyToHexString)(item.keyType, key);\n        this.storage.setItem(item.storageKey, hexString);\n    }\n}\nexports.SCWKeyManager = SCWKeyManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}