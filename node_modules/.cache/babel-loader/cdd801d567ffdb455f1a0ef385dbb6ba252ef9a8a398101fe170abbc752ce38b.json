{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.serialize = exports.getErrorCode = exports.isValidCode = exports.getMessageFromCode = exports.JSON_RPC_SERVER_ERROR_MESSAGE = void 0;\nconst constants_1 = require(\"./constants\");\nconst FALLBACK_MESSAGE = 'Unspecified error message.';\nexports.JSON_RPC_SERVER_ERROR_MESSAGE = 'Unspecified server error.';\n/**\n * Gets the message for a given code, or a fallback message if the code has\n * no corresponding message.\n */\nfunction getMessageFromCode(code) {\n  let fallbackMessage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : FALLBACK_MESSAGE;\n  if (code && Number.isInteger(code)) {\n    const codeString = code.toString();\n    if (hasKey(constants_1.errorValues, codeString)) {\n      return constants_1.errorValues[codeString].message;\n    }\n    if (isJsonRpcServerError(code)) {\n      return exports.JSON_RPC_SERVER_ERROR_MESSAGE;\n    }\n  }\n  return fallbackMessage;\n}\nexports.getMessageFromCode = getMessageFromCode;\n/**\n * Returns whether the given code is valid.\n * A code is only valid if it has a message.\n */\nfunction isValidCode(code) {\n  if (!Number.isInteger(code)) {\n    return false;\n  }\n  const codeString = code.toString();\n  if (constants_1.errorValues[codeString]) {\n    return true;\n  }\n  if (isJsonRpcServerError(code)) {\n    return true;\n  }\n  return false;\n}\nexports.isValidCode = isValidCode;\n/**\n * Returns the error code from an error object.\n */\nfunction getErrorCode(error) {\n  var _a;\n  if (typeof error === 'number') {\n    return error;\n  } else if (isErrorWithCode(error)) {\n    return (_a = error.code) !== null && _a !== void 0 ? _a : error.errorCode;\n  }\n  return undefined;\n}\nexports.getErrorCode = getErrorCode;\nfunction isErrorWithCode(error) {\n  return typeof error === 'object' && error !== null && (typeof error.code === 'number' || typeof error.errorCode === 'number');\n}\nfunction serialize(error) {\n  let {\n    shouldIncludeStack = false\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const serialized = {};\n  if (error && typeof error === 'object' && !Array.isArray(error) && hasKey(error, 'code') && isValidCode(error.code)) {\n    const _error = error;\n    serialized.code = _error.code;\n    if (_error.message && typeof _error.message === 'string') {\n      serialized.message = _error.message;\n      if (hasKey(_error, 'data')) {\n        serialized.data = _error.data;\n      }\n    } else {\n      serialized.message = getMessageFromCode(serialized.code);\n      serialized.data = {\n        originalError: assignOriginalError(error)\n      };\n    }\n  } else {\n    serialized.code = constants_1.standardErrorCodes.rpc.internal;\n    serialized.message = hasStringProperty(error, 'message') ? error.message : FALLBACK_MESSAGE;\n    serialized.data = {\n      originalError: assignOriginalError(error)\n    };\n  }\n  if (shouldIncludeStack) {\n    serialized.stack = hasStringProperty(error, 'stack') ? error.stack : undefined;\n  }\n  return serialized;\n}\nexports.serialize = serialize;\n// Internal\nfunction isJsonRpcServerError(code) {\n  return code >= -32099 && code <= -32000;\n}\nfunction assignOriginalError(error) {\n  if (error && typeof error === 'object' && !Array.isArray(error)) {\n    return Object.assign({}, error);\n  }\n  return error;\n}\nfunction hasKey(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\nfunction hasStringProperty(obj, prop) {\n  return typeof obj === 'object' && obj !== null && prop in obj && typeof obj[prop] === 'string';\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","serialize","getErrorCode","isValidCode","getMessageFromCode","JSON_RPC_SERVER_ERROR_MESSAGE","constants_1","require","FALLBACK_MESSAGE","code","fallbackMessage","arguments","length","undefined","Number","isInteger","codeString","toString","hasKey","errorValues","message","isJsonRpcServerError","error","_a","isErrorWithCode","errorCode","shouldIncludeStack","serialized","Array","isArray","_error","data","originalError","assignOriginalError","standardErrorCodes","rpc","internal","hasStringProperty","stack","assign","obj","key","prototype","hasOwnProperty","call","prop"],"sources":["/Users/shardingdog/billingdog/node_modules/@coinbase/wallet-sdk/dist/core/error/utils.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serialize = exports.getErrorCode = exports.isValidCode = exports.getMessageFromCode = exports.JSON_RPC_SERVER_ERROR_MESSAGE = void 0;\nconst constants_1 = require(\"./constants\");\nconst FALLBACK_MESSAGE = 'Unspecified error message.';\nexports.JSON_RPC_SERVER_ERROR_MESSAGE = 'Unspecified server error.';\n/**\n * Gets the message for a given code, or a fallback message if the code has\n * no corresponding message.\n */\nfunction getMessageFromCode(code, fallbackMessage = FALLBACK_MESSAGE) {\n    if (code && Number.isInteger(code)) {\n        const codeString = code.toString();\n        if (hasKey(constants_1.errorValues, codeString)) {\n            return constants_1.errorValues[codeString].message;\n        }\n        if (isJsonRpcServerError(code)) {\n            return exports.JSON_RPC_SERVER_ERROR_MESSAGE;\n        }\n    }\n    return fallbackMessage;\n}\nexports.getMessageFromCode = getMessageFromCode;\n/**\n * Returns whether the given code is valid.\n * A code is only valid if it has a message.\n */\nfunction isValidCode(code) {\n    if (!Number.isInteger(code)) {\n        return false;\n    }\n    const codeString = code.toString();\n    if (constants_1.errorValues[codeString]) {\n        return true;\n    }\n    if (isJsonRpcServerError(code)) {\n        return true;\n    }\n    return false;\n}\nexports.isValidCode = isValidCode;\n/**\n * Returns the error code from an error object.\n */\nfunction getErrorCode(error) {\n    var _a;\n    if (typeof error === 'number') {\n        return error;\n    }\n    else if (isErrorWithCode(error)) {\n        return (_a = error.code) !== null && _a !== void 0 ? _a : error.errorCode;\n    }\n    return undefined;\n}\nexports.getErrorCode = getErrorCode;\nfunction isErrorWithCode(error) {\n    return (typeof error === 'object' &&\n        error !== null &&\n        (typeof error.code === 'number' ||\n            typeof error.errorCode === 'number'));\n}\nfunction serialize(error, { shouldIncludeStack = false } = {}) {\n    const serialized = {};\n    if (error &&\n        typeof error === 'object' &&\n        !Array.isArray(error) &&\n        hasKey(error, 'code') &&\n        isValidCode(error.code)) {\n        const _error = error;\n        serialized.code = _error.code;\n        if (_error.message && typeof _error.message === 'string') {\n            serialized.message = _error.message;\n            if (hasKey(_error, 'data')) {\n                serialized.data = _error.data;\n            }\n        }\n        else {\n            serialized.message = getMessageFromCode(serialized.code);\n            serialized.data = { originalError: assignOriginalError(error) };\n        }\n    }\n    else {\n        serialized.code = constants_1.standardErrorCodes.rpc.internal;\n        serialized.message = hasStringProperty(error, 'message') ? error.message : FALLBACK_MESSAGE;\n        serialized.data = { originalError: assignOriginalError(error) };\n    }\n    if (shouldIncludeStack) {\n        serialized.stack = hasStringProperty(error, 'stack') ? error.stack : undefined;\n    }\n    return serialized;\n}\nexports.serialize = serialize;\n// Internal\nfunction isJsonRpcServerError(code) {\n    return code >= -32099 && code <= -32000;\n}\nfunction assignOriginalError(error) {\n    if (error && typeof error === 'object' && !Array.isArray(error)) {\n        return Object.assign({}, error);\n    }\n    return error;\n}\nfunction hasKey(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\nfunction hasStringProperty(obj, prop) {\n    return (typeof obj === 'object' && obj !== null && prop in obj && typeof obj[prop] === 'string');\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}