{"ast":null,"code":"\"use strict\";\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WalletLinkSigner = void 0;\n// Copyright (c) 2018-2024 Coinbase, Inc. <https://www.coinbase.com/>\nconst eth_eip712_util_1 = __importDefault(require(\"../../vendor-js/eth-eip712-util\"));\nconst constants_1 = require(\"./relay/constants\");\nconst RelayEventManager_1 = require(\"./relay/RelayEventManager\");\nconst Web3Response_1 = require(\"./relay/type/Web3Response\");\nconst WalletLinkRelay_1 = require(\"./relay/WalletLinkRelay\");\nconst constants_2 = require(\"../../core/constants\");\nconst error_1 = require(\"../../core/error\");\nconst util_1 = require(\"../../core/type/util\");\nconst ScopedLocalStorage_1 = require(\"../../util/ScopedLocalStorage\");\nconst DEFAULT_CHAIN_ID_KEY = 'DefaultChainId';\nconst DEFAULT_JSON_RPC_URL = 'DefaultJsonRpcUrl';\n// original source: https://github.com/coinbase/coinbase-wallet-sdk/blob/v3.7.1/packages/wallet-sdk/src/provider/CoinbaseWalletProvider.ts\nclass WalletLinkSigner {\n  constructor(options) {\n    var _a, _b;\n    this._relay = null;\n    this._addresses = [];\n    this.hasMadeFirstChainChangedEmission = false;\n    const {\n      appName,\n      appLogoUrl\n    } = options.metadata;\n    this._appName = appName;\n    this._appLogoUrl = appLogoUrl;\n    this._storage = new ScopedLocalStorage_1.ScopedLocalStorage('walletlink', constants_2.WALLETLINK_URL);\n    this.updateListener = options.updateListener;\n    this._relayEventManager = new RelayEventManager_1.RelayEventManager();\n    this._jsonRpcUrlFromOpts = '';\n    const cachedAddresses = this._storage.getItem(constants_1.LOCAL_STORAGE_ADDRESSES_KEY);\n    if (cachedAddresses) {\n      const addresses = cachedAddresses.split(' ');\n      if (addresses[0] !== '') {\n        this._addresses = addresses.map(address => (0, util_1.ensureAddressString)(address));\n        (_a = this.updateListener) === null || _a === void 0 ? void 0 : _a.onAccountsUpdate({\n          accounts: this._addresses,\n          source: 'storage'\n        });\n      }\n    }\n    const cachedChainId = this._storage.getItem(DEFAULT_CHAIN_ID_KEY);\n    if (cachedChainId) {\n      (_b = this.updateListener) === null || _b === void 0 ? void 0 : _b.onChainUpdate({\n        chain: {\n          id: this.getChainId(),\n          rpcUrl: this.jsonRpcUrl\n        },\n        source: 'storage'\n      });\n      this.hasMadeFirstChainChangedEmission = true;\n    }\n    this.initializeRelay();\n  }\n  getSession() {\n    const relay = this.initializeRelay();\n    const {\n      id,\n      secret\n    } = relay.getWalletLinkSession();\n    return {\n      id,\n      secret\n    };\n  }\n  async handshake() {\n    const ethAddresses = await this.request({\n      method: 'eth_requestAccounts'\n    });\n    return ethAddresses;\n  }\n  get selectedAddress() {\n    return this._addresses[0] || undefined;\n  }\n  get jsonRpcUrl() {\n    var _a;\n    return (_a = this._storage.getItem(DEFAULT_JSON_RPC_URL)) !== null && _a !== void 0 ? _a : this._jsonRpcUrlFromOpts;\n  }\n  set jsonRpcUrl(value) {\n    this._storage.setItem(DEFAULT_JSON_RPC_URL, value);\n  }\n  updateProviderInfo(jsonRpcUrl, chainId) {\n    var _a;\n    this.jsonRpcUrl = jsonRpcUrl;\n    // emit chainChanged event if necessary\n    const originalChainId = this.getChainId();\n    this._storage.setItem(DEFAULT_CHAIN_ID_KEY, chainId.toString(10));\n    const chainChanged = (0, util_1.ensureIntNumber)(chainId) !== originalChainId;\n    if (chainChanged || !this.hasMadeFirstChainChangedEmission) {\n      (_a = this.updateListener) === null || _a === void 0 ? void 0 : _a.onChainUpdate({\n        chain: {\n          id: chainId,\n          rpcUrl: jsonRpcUrl\n        },\n        source: 'wallet'\n      });\n      this.hasMadeFirstChainChangedEmission = true;\n    }\n  }\n  async watchAsset(type, address, symbol, decimals, image, chainId) {\n    const relay = this.initializeRelay();\n    const result = await relay.watchAsset(type, address, symbol, decimals, image, chainId === null || chainId === void 0 ? void 0 : chainId.toString());\n    if ((0, Web3Response_1.isErrorResponse)(result)) return false;\n    return !!result.result;\n  }\n  async addEthereumChain(chainId, rpcUrls, blockExplorerUrls, chainName, iconUrls, nativeCurrency) {\n    var _a, _b;\n    if ((0, util_1.ensureIntNumber)(chainId) === this.getChainId()) {\n      return false;\n    }\n    const relay = this.initializeRelay();\n    if (!this._isAuthorized()) {\n      await relay.requestEthereumAccounts();\n    }\n    const res = await relay.addEthereumChain(chainId.toString(), rpcUrls, iconUrls, blockExplorerUrls, chainName, nativeCurrency);\n    if ((0, Web3Response_1.isErrorResponse)(res)) return false;\n    if (((_a = res.result) === null || _a === void 0 ? void 0 : _a.isApproved) === true) {\n      this.updateProviderInfo(rpcUrls[0], chainId);\n    }\n    return ((_b = res.result) === null || _b === void 0 ? void 0 : _b.isApproved) === true;\n  }\n  async switchEthereumChain(chainId) {\n    const relay = this.initializeRelay();\n    const res = await relay.switchEthereumChain(chainId.toString(10), this.selectedAddress || undefined);\n    // backward compatibility\n    if ((0, Web3Response_1.isErrorResponse)(res)) {\n      if (!res.errorCode) return;\n      if (res.errorCode === error_1.standardErrorCodes.provider.unsupportedChain) {\n        throw error_1.standardErrors.provider.unsupportedChain();\n      } else {\n        throw error_1.standardErrors.provider.custom({\n          message: res.errorMessage,\n          code: res.errorCode\n        });\n      }\n    }\n    const switchResponse = res.result;\n    if (switchResponse.isApproved && switchResponse.rpcUrl.length > 0) {\n      this.updateProviderInfo(switchResponse.rpcUrl, chainId);\n    }\n  }\n  async disconnect() {\n    if (this._relay) {\n      this._relay.resetAndReload();\n    }\n    this._storage.clear();\n  }\n  async request(args) {\n    try {\n      return this._request(args).catch(error => {\n        throw error;\n      });\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n  async _request(args) {\n    if (!args || typeof args !== 'object' || Array.isArray(args)) {\n      throw error_1.standardErrors.rpc.invalidRequest({\n        message: 'Expected a single, non-array, object argument.',\n        data: args\n      });\n    }\n    const {\n      method,\n      params\n    } = args;\n    if (typeof method !== 'string' || method.length === 0) {\n      throw error_1.standardErrors.rpc.invalidRequest({\n        message: \"'args.method' must be a non-empty string.\",\n        data: args\n      });\n    }\n    if (params !== undefined && !Array.isArray(params) && (typeof params !== 'object' || params === null)) {\n      throw error_1.standardErrors.rpc.invalidRequest({\n        message: \"'args.params' must be an object or array if provided.\",\n        data: args\n      });\n    }\n    const newParams = params === undefined ? [] : params;\n    // Coinbase Wallet Requests\n    const id = this._relayEventManager.makeRequestId();\n    const result = await this._sendRequestAsync({\n      method,\n      params: newParams,\n      jsonrpc: '2.0',\n      id\n    });\n    return result.result;\n  }\n  _setAddresses(addresses, _) {\n    var _a;\n    if (!Array.isArray(addresses)) {\n      throw new Error('addresses is not an array');\n    }\n    const newAddresses = addresses.map(address => (0, util_1.ensureAddressString)(address));\n    if (JSON.stringify(newAddresses) === JSON.stringify(this._addresses)) {\n      return;\n    }\n    this._addresses = newAddresses;\n    (_a = this.updateListener) === null || _a === void 0 ? void 0 : _a.onAccountsUpdate({\n      accounts: newAddresses,\n      source: 'wallet'\n    });\n    this._storage.setItem(constants_1.LOCAL_STORAGE_ADDRESSES_KEY, newAddresses.join(' '));\n  }\n  _sendRequestAsync(request) {\n    return new Promise((resolve, reject) => {\n      try {\n        const syncResult = this._handleSynchronousMethods(request);\n        if (syncResult !== undefined) {\n          return resolve({\n            jsonrpc: '2.0',\n            id: request.id,\n            result: syncResult\n          });\n        }\n      } catch (err) {\n        return reject(err);\n      }\n      this._handleAsynchronousMethods(request).then(res => res && resolve(Object.assign(Object.assign({}, res), {\n        id: request.id\n      }))).catch(err => reject(err));\n    });\n  }\n  _handleSynchronousMethods(request) {\n    const {\n      method\n    } = request;\n    switch (method) {\n      case 'eth_accounts':\n        return this._eth_accounts();\n      case 'eth_coinbase':\n        return this._eth_coinbase();\n      case 'net_version':\n        return this._net_version();\n      case 'eth_chainId':\n        return this._eth_chainId();\n      default:\n        return undefined;\n    }\n  }\n  async _handleAsynchronousMethods(request) {\n    const {\n      method\n    } = request;\n    const params = request.params || [];\n    switch (method) {\n      case 'eth_requestAccounts':\n        return this._eth_requestAccounts();\n      case 'eth_sign':\n        return this._eth_sign(params);\n      case 'eth_ecRecover':\n        return this._eth_ecRecover(params);\n      case 'personal_sign':\n        return this._personal_sign(params);\n      case 'personal_ecRecover':\n        return this._personal_ecRecover(params);\n      case 'eth_signTransaction':\n        return this._eth_signTransaction(params);\n      case 'eth_sendRawTransaction':\n        return this._eth_sendRawTransaction(params);\n      case 'eth_sendTransaction':\n        return this._eth_sendTransaction(params);\n      case 'eth_signTypedData_v1':\n        return this._eth_signTypedData_v1(params);\n      case 'eth_signTypedData_v2':\n        return this._throwUnsupportedMethodError();\n      case 'eth_signTypedData_v3':\n        return this._eth_signTypedData_v3(params);\n      case 'eth_signTypedData_v4':\n      case 'eth_signTypedData':\n        return this._eth_signTypedData_v4(params);\n      case 'wallet_addEthereumChain':\n        return this._wallet_addEthereumChain(params);\n      case 'wallet_switchEthereumChain':\n        return this._wallet_switchEthereumChain(params);\n      case 'wallet_watchAsset':\n        return this._wallet_watchAsset(params);\n      default:\n        return this._throwUnsupportedMethodError();\n    }\n  }\n  _isKnownAddress(addressString) {\n    try {\n      const addressStr = (0, util_1.ensureAddressString)(addressString);\n      const lowercaseAddresses = this._addresses.map(address => (0, util_1.ensureAddressString)(address));\n      return lowercaseAddresses.includes(addressStr);\n    } catch (_a) {\n      // noop\n    }\n    return false;\n  }\n  _ensureKnownAddress(addressString) {\n    if (!this._isKnownAddress(addressString)) {\n      throw new Error('Unknown Ethereum address');\n    }\n  }\n  _prepareTransactionParams(tx) {\n    const fromAddress = tx.from ? (0, util_1.ensureAddressString)(tx.from) : this.selectedAddress;\n    if (!fromAddress) {\n      throw new Error('Ethereum address is unavailable');\n    }\n    this._ensureKnownAddress(fromAddress);\n    const toAddress = tx.to ? (0, util_1.ensureAddressString)(tx.to) : null;\n    const weiValue = tx.value != null ? (0, util_1.ensureBigInt)(tx.value) : BigInt(0);\n    const data = tx.data ? (0, util_1.ensureBuffer)(tx.data) : Buffer.alloc(0);\n    const nonce = tx.nonce != null ? (0, util_1.ensureIntNumber)(tx.nonce) : null;\n    const gasPriceInWei = tx.gasPrice != null ? (0, util_1.ensureBigInt)(tx.gasPrice) : null;\n    const maxFeePerGas = tx.maxFeePerGas != null ? (0, util_1.ensureBigInt)(tx.maxFeePerGas) : null;\n    const maxPriorityFeePerGas = tx.maxPriorityFeePerGas != null ? (0, util_1.ensureBigInt)(tx.maxPriorityFeePerGas) : null;\n    const gasLimit = tx.gas != null ? (0, util_1.ensureBigInt)(tx.gas) : null;\n    const chainId = tx.chainId ? (0, util_1.ensureIntNumber)(tx.chainId) : this.getChainId();\n    return {\n      fromAddress,\n      toAddress,\n      weiValue,\n      data,\n      nonce,\n      gasPriceInWei,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      gasLimit,\n      chainId\n    };\n  }\n  _isAuthorized() {\n    return this._addresses.length > 0;\n  }\n  _requireAuthorization() {\n    if (!this._isAuthorized()) {\n      throw error_1.standardErrors.provider.unauthorized({});\n    }\n  }\n  _throwUnsupportedMethodError() {\n    throw error_1.standardErrors.provider.unsupportedMethod({});\n  }\n  async _signEthereumMessage(message, address, addPrefix, typedDataJson) {\n    this._ensureKnownAddress(address);\n    try {\n      const relay = this.initializeRelay();\n      const res = await relay.signEthereumMessage(message, address, addPrefix, typedDataJson);\n      if ((0, Web3Response_1.isErrorResponse)(res)) {\n        throw new Error(res.errorMessage);\n      }\n      return {\n        jsonrpc: '2.0',\n        id: 0,\n        result: res.result\n      };\n    } catch (err) {\n      if (typeof err.message === 'string' && err.message.match(/(denied|rejected)/i)) {\n        throw error_1.standardErrors.provider.userRejectedRequest('User denied message signature');\n      }\n      throw err;\n    }\n  }\n  async _ethereumAddressFromSignedMessage(message, signature, addPrefix) {\n    const relay = this.initializeRelay();\n    const res = await relay.ethereumAddressFromSignedMessage(message, signature, addPrefix);\n    if ((0, Web3Response_1.isErrorResponse)(res)) {\n      throw new Error(res.errorMessage);\n    }\n    return {\n      jsonrpc: '2.0',\n      id: 0,\n      result: res.result\n    };\n  }\n  _eth_accounts() {\n    return [...this._addresses];\n  }\n  _eth_coinbase() {\n    return this.selectedAddress || null;\n  }\n  _net_version() {\n    return this.getChainId().toString(10);\n  }\n  _eth_chainId() {\n    return (0, util_1.hexStringFromIntNumber)(this.getChainId());\n  }\n  getChainId() {\n    const chainIdStr = this._storage.getItem(DEFAULT_CHAIN_ID_KEY);\n    if (!chainIdStr) {\n      return (0, util_1.ensureIntNumber)(1); // default to mainnet\n    }\n    const chainId = parseInt(chainIdStr, 10);\n    return (0, util_1.ensureIntNumber)(chainId);\n  }\n  async _eth_requestAccounts() {\n    if (this._isAuthorized()) {\n      return Promise.resolve({\n        jsonrpc: '2.0',\n        id: 0,\n        result: this._addresses\n      });\n    }\n    let res;\n    try {\n      const relay = this.initializeRelay();\n      res = await relay.requestEthereumAccounts();\n      if ((0, Web3Response_1.isErrorResponse)(res)) {\n        throw new Error(res.errorMessage);\n      }\n    } catch (err) {\n      if (typeof err.message === 'string' && err.message.match(/(denied|rejected)/i)) {\n        throw error_1.standardErrors.provider.userRejectedRequest('User denied account authorization');\n      }\n      throw err;\n    }\n    if (!res.result) {\n      throw new Error('accounts received is empty');\n    }\n    this._setAddresses(res.result);\n    return {\n      jsonrpc: '2.0',\n      id: 0,\n      result: this._addresses\n    };\n  }\n  _eth_sign(params) {\n    this._requireAuthorization();\n    const address = (0, util_1.ensureAddressString)(params[0]);\n    const message = (0, util_1.ensureBuffer)(params[1]);\n    return this._signEthereumMessage(message, address, false);\n  }\n  _eth_ecRecover(params) {\n    const message = (0, util_1.ensureBuffer)(params[0]);\n    const signature = (0, util_1.ensureBuffer)(params[1]);\n    return this._ethereumAddressFromSignedMessage(message, signature, false);\n  }\n  _personal_sign(params) {\n    this._requireAuthorization();\n    const message = (0, util_1.ensureBuffer)(params[0]);\n    const address = (0, util_1.ensureAddressString)(params[1]);\n    return this._signEthereumMessage(message, address, true);\n  }\n  _personal_ecRecover(params) {\n    const message = (0, util_1.ensureBuffer)(params[0]);\n    const signature = (0, util_1.ensureBuffer)(params[1]);\n    return this._ethereumAddressFromSignedMessage(message, signature, true);\n  }\n  async _eth_signTransaction(params) {\n    this._requireAuthorization();\n    const tx = this._prepareTransactionParams(params[0] || {});\n    try {\n      const relay = this.initializeRelay();\n      const res = await relay.signEthereumTransaction(tx);\n      if ((0, Web3Response_1.isErrorResponse)(res)) {\n        throw new Error(res.errorMessage);\n      }\n      return {\n        jsonrpc: '2.0',\n        id: 0,\n        result: res.result\n      };\n    } catch (err) {\n      if (typeof err.message === 'string' && err.message.match(/(denied|rejected)/i)) {\n        throw error_1.standardErrors.provider.userRejectedRequest('User denied transaction signature');\n      }\n      throw err;\n    }\n  }\n  async _eth_sendRawTransaction(params) {\n    const signedTransaction = (0, util_1.ensureBuffer)(params[0]);\n    const relay = this.initializeRelay();\n    const res = await relay.submitEthereumTransaction(signedTransaction, this.getChainId());\n    if ((0, Web3Response_1.isErrorResponse)(res)) {\n      throw new Error(res.errorMessage);\n    }\n    return {\n      jsonrpc: '2.0',\n      id: 0,\n      result: res.result\n    };\n  }\n  async _eth_sendTransaction(params) {\n    this._requireAuthorization();\n    const tx = this._prepareTransactionParams(params[0] || {});\n    try {\n      const relay = this.initializeRelay();\n      const res = await relay.signAndSubmitEthereumTransaction(tx);\n      if ((0, Web3Response_1.isErrorResponse)(res)) {\n        throw new Error(res.errorMessage);\n      }\n      return {\n        jsonrpc: '2.0',\n        id: 0,\n        result: res.result\n      };\n    } catch (err) {\n      if (typeof err.message === 'string' && err.message.match(/(denied|rejected)/i)) {\n        throw error_1.standardErrors.provider.userRejectedRequest('User denied transaction signature');\n      }\n      throw err;\n    }\n  }\n  async _eth_signTypedData_v1(params) {\n    this._requireAuthorization();\n    const typedData = (0, util_1.ensureParsedJSONObject)(params[0]);\n    const address = (0, util_1.ensureAddressString)(params[1]);\n    this._ensureKnownAddress(address);\n    const message = eth_eip712_util_1.default.hashForSignTypedDataLegacy({\n      data: typedData\n    });\n    const typedDataJSON = JSON.stringify(typedData, null, 2);\n    return this._signEthereumMessage(message, address, false, typedDataJSON);\n  }\n  async _eth_signTypedData_v3(params) {\n    this._requireAuthorization();\n    const address = (0, util_1.ensureAddressString)(params[0]);\n    const typedData = (0, util_1.ensureParsedJSONObject)(params[1]);\n    this._ensureKnownAddress(address);\n    const message = eth_eip712_util_1.default.hashForSignTypedData_v3({\n      data: typedData\n    });\n    const typedDataJSON = JSON.stringify(typedData, null, 2);\n    return this._signEthereumMessage(message, address, false, typedDataJSON);\n  }\n  async _eth_signTypedData_v4(params) {\n    this._requireAuthorization();\n    const address = (0, util_1.ensureAddressString)(params[0]);\n    const typedData = (0, util_1.ensureParsedJSONObject)(params[1]);\n    this._ensureKnownAddress(address);\n    const message = eth_eip712_util_1.default.hashForSignTypedData_v4({\n      data: typedData\n    });\n    const typedDataJSON = JSON.stringify(typedData, null, 2);\n    return this._signEthereumMessage(message, address, false, typedDataJSON);\n  }\n  async _wallet_addEthereumChain(params) {\n    var _a, _b, _c, _d;\n    const request = params[0];\n    if (((_a = request.rpcUrls) === null || _a === void 0 ? void 0 : _a.length) === 0) {\n      return {\n        jsonrpc: '2.0',\n        id: 0,\n        error: {\n          code: 2,\n          message: `please pass in at least 1 rpcUrl`\n        }\n      };\n    }\n    if (!request.chainName || request.chainName.trim() === '') {\n      throw error_1.standardErrors.rpc.invalidParams('chainName is a required field');\n    }\n    if (!request.nativeCurrency) {\n      throw error_1.standardErrors.rpc.invalidParams('nativeCurrency is a required field');\n    }\n    const chainIdNumber = parseInt(request.chainId, 16);\n    const success = await this.addEthereumChain(chainIdNumber, (_b = request.rpcUrls) !== null && _b !== void 0 ? _b : [], (_c = request.blockExplorerUrls) !== null && _c !== void 0 ? _c : [], request.chainName, (_d = request.iconUrls) !== null && _d !== void 0 ? _d : [], request.nativeCurrency);\n    if (success) {\n      return {\n        jsonrpc: '2.0',\n        id: 0,\n        result: null\n      };\n    }\n    return {\n      jsonrpc: '2.0',\n      id: 0,\n      error: {\n        code: 2,\n        message: `unable to add ethereum chain`\n      }\n    };\n  }\n  async _wallet_switchEthereumChain(params) {\n    const request = params[0];\n    await this.switchEthereumChain(parseInt(request.chainId, 16));\n    return {\n      jsonrpc: '2.0',\n      id: 0,\n      result: null\n    };\n  }\n  async _wallet_watchAsset(params) {\n    const request = Array.isArray(params) ? params[0] : params;\n    if (!request.type) {\n      throw error_1.standardErrors.rpc.invalidParams('Type is required');\n    }\n    if ((request === null || request === void 0 ? void 0 : request.type) !== 'ERC20') {\n      throw error_1.standardErrors.rpc.invalidParams(`Asset of type '${request.type}' is not supported`);\n    }\n    if (!(request === null || request === void 0 ? void 0 : request.options)) {\n      throw error_1.standardErrors.rpc.invalidParams('Options are required');\n    }\n    if (!(request === null || request === void 0 ? void 0 : request.options.address)) {\n      throw error_1.standardErrors.rpc.invalidParams('Address is required');\n    }\n    const chainId = this.getChainId();\n    const {\n      address,\n      symbol,\n      image,\n      decimals\n    } = request.options;\n    const res = await this.watchAsset(request.type, address, symbol, decimals, image, chainId);\n    return {\n      jsonrpc: '2.0',\n      id: 0,\n      result: res\n    };\n  }\n  initializeRelay() {\n    if (!this._relay) {\n      const relay = new WalletLinkRelay_1.WalletLinkRelay({\n        linkAPIUrl: constants_2.WALLETLINK_URL,\n        storage: this._storage\n      });\n      relay.setAppInfo(this._appName, this._appLogoUrl);\n      relay.attachUI();\n      relay.setAccountsCallback((accounts, isDisconnect) => this._setAddresses(accounts, isDisconnect));\n      relay.setChainCallback((chainId, jsonRpcUrl) => {\n        this.updateProviderInfo(jsonRpcUrl, parseInt(chainId, 10));\n      });\n      this._relay = relay;\n    }\n    return this._relay;\n  }\n}\nexports.WalletLinkSigner = WalletLinkSigner;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","WalletLinkSigner","eth_eip712_util_1","require","constants_1","RelayEventManager_1","Web3Response_1","WalletLinkRelay_1","constants_2","error_1","util_1","ScopedLocalStorage_1","DEFAULT_CHAIN_ID_KEY","DEFAULT_JSON_RPC_URL","constructor","options","_a","_b","_relay","_addresses","hasMadeFirstChainChangedEmission","appName","appLogoUrl","metadata","_appName","_appLogoUrl","_storage","ScopedLocalStorage","WALLETLINK_URL","updateListener","_relayEventManager","RelayEventManager","_jsonRpcUrlFromOpts","cachedAddresses","getItem","LOCAL_STORAGE_ADDRESSES_KEY","addresses","split","map","address","ensureAddressString","onAccountsUpdate","accounts","source","cachedChainId","onChainUpdate","chain","id","getChainId","rpcUrl","jsonRpcUrl","initializeRelay","getSession","relay","secret","getWalletLinkSession","handshake","ethAddresses","request","method","selectedAddress","undefined","setItem","updateProviderInfo","chainId","originalChainId","toString","chainChanged","ensureIntNumber","watchAsset","type","symbol","decimals","image","result","isErrorResponse","addEthereumChain","rpcUrls","blockExplorerUrls","chainName","iconUrls","nativeCurrency","_isAuthorized","requestEthereumAccounts","res","isApproved","switchEthereumChain","errorCode","standardErrorCodes","provider","unsupportedChain","standardErrors","custom","message","errorMessage","code","switchResponse","length","disconnect","resetAndReload","clear","args","_request","catch","error","Promise","reject","Array","isArray","rpc","invalidRequest","data","params","newParams","makeRequestId","_sendRequestAsync","jsonrpc","_setAddresses","_","Error","newAddresses","JSON","stringify","join","resolve","syncResult","_handleSynchronousMethods","err","_handleAsynchronousMethods","then","assign","_eth_accounts","_eth_coinbase","_net_version","_eth_chainId","_eth_requestAccounts","_eth_sign","_eth_ecRecover","_personal_sign","_personal_ecRecover","_eth_signTransaction","_eth_sendRawTransaction","_eth_sendTransaction","_eth_signTypedData_v1","_throwUnsupportedMethodError","_eth_signTypedData_v3","_eth_signTypedData_v4","_wallet_addEthereumChain","_wallet_switchEthereumChain","_wallet_watchAsset","_isKnownAddress","addressString","addressStr","lowercaseAddresses","includes","_ensureKnownAddress","_prepareTransactionParams","tx","fromAddress","from","toAddress","to","weiValue","ensureBigInt","BigInt","ensureBuffer","Buffer","alloc","nonce","gasPriceInWei","gasPrice","maxFeePerGas","maxPriorityFeePerGas","gasLimit","gas","_requireAuthorization","unauthorized","unsupportedMethod","_signEthereumMessage","addPrefix","typedDataJson","signEthereumMessage","match","userRejectedRequest","_ethereumAddressFromSignedMessage","signature","ethereumAddressFromSignedMessage","hexStringFromIntNumber","chainIdStr","parseInt","signEthereumTransaction","signedTransaction","submitEthereumTransaction","signAndSubmitEthereumTransaction","typedData","ensureParsedJSONObject","default","hashForSignTypedDataLegacy","typedDataJSON","hashForSignTypedData_v3","hashForSignTypedData_v4","_c","_d","trim","invalidParams","chainIdNumber","success","WalletLinkRelay","linkAPIUrl","storage","setAppInfo","attachUI","setAccountsCallback","isDisconnect","setChainCallback"],"sources":["/Users/shardingdog/billingdog/node_modules/@coinbase/wallet-sdk/dist/sign/walletlink/WalletLinkSigner.js"],"sourcesContent":["\"use strict\";\n/* eslint-disable @typescript-eslint/no-explicit-any */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletLinkSigner = void 0;\n// Copyright (c) 2018-2024 Coinbase, Inc. <https://www.coinbase.com/>\nconst eth_eip712_util_1 = __importDefault(require(\"../../vendor-js/eth-eip712-util\"));\nconst constants_1 = require(\"./relay/constants\");\nconst RelayEventManager_1 = require(\"./relay/RelayEventManager\");\nconst Web3Response_1 = require(\"./relay/type/Web3Response\");\nconst WalletLinkRelay_1 = require(\"./relay/WalletLinkRelay\");\nconst constants_2 = require(\"../../core/constants\");\nconst error_1 = require(\"../../core/error\");\nconst util_1 = require(\"../../core/type/util\");\nconst ScopedLocalStorage_1 = require(\"../../util/ScopedLocalStorage\");\nconst DEFAULT_CHAIN_ID_KEY = 'DefaultChainId';\nconst DEFAULT_JSON_RPC_URL = 'DefaultJsonRpcUrl';\n// original source: https://github.com/coinbase/coinbase-wallet-sdk/blob/v3.7.1/packages/wallet-sdk/src/provider/CoinbaseWalletProvider.ts\nclass WalletLinkSigner {\n    constructor(options) {\n        var _a, _b;\n        this._relay = null;\n        this._addresses = [];\n        this.hasMadeFirstChainChangedEmission = false;\n        const { appName, appLogoUrl } = options.metadata;\n        this._appName = appName;\n        this._appLogoUrl = appLogoUrl;\n        this._storage = new ScopedLocalStorage_1.ScopedLocalStorage('walletlink', constants_2.WALLETLINK_URL);\n        this.updateListener = options.updateListener;\n        this._relayEventManager = new RelayEventManager_1.RelayEventManager();\n        this._jsonRpcUrlFromOpts = '';\n        const cachedAddresses = this._storage.getItem(constants_1.LOCAL_STORAGE_ADDRESSES_KEY);\n        if (cachedAddresses) {\n            const addresses = cachedAddresses.split(' ');\n            if (addresses[0] !== '') {\n                this._addresses = addresses.map((address) => (0, util_1.ensureAddressString)(address));\n                (_a = this.updateListener) === null || _a === void 0 ? void 0 : _a.onAccountsUpdate({\n                    accounts: this._addresses,\n                    source: 'storage',\n                });\n            }\n        }\n        const cachedChainId = this._storage.getItem(DEFAULT_CHAIN_ID_KEY);\n        if (cachedChainId) {\n            (_b = this.updateListener) === null || _b === void 0 ? void 0 : _b.onChainUpdate({\n                chain: {\n                    id: this.getChainId(),\n                    rpcUrl: this.jsonRpcUrl,\n                },\n                source: 'storage',\n            });\n            this.hasMadeFirstChainChangedEmission = true;\n        }\n        this.initializeRelay();\n    }\n    getSession() {\n        const relay = this.initializeRelay();\n        const { id, secret } = relay.getWalletLinkSession();\n        return { id, secret };\n    }\n    async handshake() {\n        const ethAddresses = await this.request({ method: 'eth_requestAccounts' });\n        return ethAddresses;\n    }\n    get selectedAddress() {\n        return this._addresses[0] || undefined;\n    }\n    get jsonRpcUrl() {\n        var _a;\n        return (_a = this._storage.getItem(DEFAULT_JSON_RPC_URL)) !== null && _a !== void 0 ? _a : this._jsonRpcUrlFromOpts;\n    }\n    set jsonRpcUrl(value) {\n        this._storage.setItem(DEFAULT_JSON_RPC_URL, value);\n    }\n    updateProviderInfo(jsonRpcUrl, chainId) {\n        var _a;\n        this.jsonRpcUrl = jsonRpcUrl;\n        // emit chainChanged event if necessary\n        const originalChainId = this.getChainId();\n        this._storage.setItem(DEFAULT_CHAIN_ID_KEY, chainId.toString(10));\n        const chainChanged = (0, util_1.ensureIntNumber)(chainId) !== originalChainId;\n        if (chainChanged || !this.hasMadeFirstChainChangedEmission) {\n            (_a = this.updateListener) === null || _a === void 0 ? void 0 : _a.onChainUpdate({\n                chain: { id: chainId, rpcUrl: jsonRpcUrl },\n                source: 'wallet',\n            });\n            this.hasMadeFirstChainChangedEmission = true;\n        }\n    }\n    async watchAsset(type, address, symbol, decimals, image, chainId) {\n        const relay = this.initializeRelay();\n        const result = await relay.watchAsset(type, address, symbol, decimals, image, chainId === null || chainId === void 0 ? void 0 : chainId.toString());\n        if ((0, Web3Response_1.isErrorResponse)(result))\n            return false;\n        return !!result.result;\n    }\n    async addEthereumChain(chainId, rpcUrls, blockExplorerUrls, chainName, iconUrls, nativeCurrency) {\n        var _a, _b;\n        if ((0, util_1.ensureIntNumber)(chainId) === this.getChainId()) {\n            return false;\n        }\n        const relay = this.initializeRelay();\n        if (!this._isAuthorized()) {\n            await relay.requestEthereumAccounts();\n        }\n        const res = await relay.addEthereumChain(chainId.toString(), rpcUrls, iconUrls, blockExplorerUrls, chainName, nativeCurrency);\n        if ((0, Web3Response_1.isErrorResponse)(res))\n            return false;\n        if (((_a = res.result) === null || _a === void 0 ? void 0 : _a.isApproved) === true) {\n            this.updateProviderInfo(rpcUrls[0], chainId);\n        }\n        return ((_b = res.result) === null || _b === void 0 ? void 0 : _b.isApproved) === true;\n    }\n    async switchEthereumChain(chainId) {\n        const relay = this.initializeRelay();\n        const res = await relay.switchEthereumChain(chainId.toString(10), this.selectedAddress || undefined);\n        // backward compatibility\n        if ((0, Web3Response_1.isErrorResponse)(res)) {\n            if (!res.errorCode)\n                return;\n            if (res.errorCode === error_1.standardErrorCodes.provider.unsupportedChain) {\n                throw error_1.standardErrors.provider.unsupportedChain();\n            }\n            else {\n                throw error_1.standardErrors.provider.custom({\n                    message: res.errorMessage,\n                    code: res.errorCode,\n                });\n            }\n        }\n        const switchResponse = res.result;\n        if (switchResponse.isApproved && switchResponse.rpcUrl.length > 0) {\n            this.updateProviderInfo(switchResponse.rpcUrl, chainId);\n        }\n    }\n    async disconnect() {\n        if (this._relay) {\n            this._relay.resetAndReload();\n        }\n        this._storage.clear();\n    }\n    async request(args) {\n        try {\n            return this._request(args).catch((error) => {\n                throw error;\n            });\n        }\n        catch (error) {\n            return Promise.reject(error);\n        }\n    }\n    async _request(args) {\n        if (!args || typeof args !== 'object' || Array.isArray(args)) {\n            throw error_1.standardErrors.rpc.invalidRequest({\n                message: 'Expected a single, non-array, object argument.',\n                data: args,\n            });\n        }\n        const { method, params } = args;\n        if (typeof method !== 'string' || method.length === 0) {\n            throw error_1.standardErrors.rpc.invalidRequest({\n                message: \"'args.method' must be a non-empty string.\",\n                data: args,\n            });\n        }\n        if (params !== undefined &&\n            !Array.isArray(params) &&\n            (typeof params !== 'object' || params === null)) {\n            throw error_1.standardErrors.rpc.invalidRequest({\n                message: \"'args.params' must be an object or array if provided.\",\n                data: args,\n            });\n        }\n        const newParams = params === undefined ? [] : params;\n        // Coinbase Wallet Requests\n        const id = this._relayEventManager.makeRequestId();\n        const result = await this._sendRequestAsync({\n            method,\n            params: newParams,\n            jsonrpc: '2.0',\n            id,\n        });\n        return result.result;\n    }\n    _setAddresses(addresses, _) {\n        var _a;\n        if (!Array.isArray(addresses)) {\n            throw new Error('addresses is not an array');\n        }\n        const newAddresses = addresses.map((address) => (0, util_1.ensureAddressString)(address));\n        if (JSON.stringify(newAddresses) === JSON.stringify(this._addresses)) {\n            return;\n        }\n        this._addresses = newAddresses;\n        (_a = this.updateListener) === null || _a === void 0 ? void 0 : _a.onAccountsUpdate({\n            accounts: newAddresses,\n            source: 'wallet',\n        });\n        this._storage.setItem(constants_1.LOCAL_STORAGE_ADDRESSES_KEY, newAddresses.join(' '));\n    }\n    _sendRequestAsync(request) {\n        return new Promise((resolve, reject) => {\n            try {\n                const syncResult = this._handleSynchronousMethods(request);\n                if (syncResult !== undefined) {\n                    return resolve({\n                        jsonrpc: '2.0',\n                        id: request.id,\n                        result: syncResult,\n                    });\n                }\n            }\n            catch (err) {\n                return reject(err);\n            }\n            this._handleAsynchronousMethods(request)\n                .then((res) => res && resolve(Object.assign(Object.assign({}, res), { id: request.id })))\n                .catch((err) => reject(err));\n        });\n    }\n    _handleSynchronousMethods(request) {\n        const { method } = request;\n        switch (method) {\n            case 'eth_accounts':\n                return this._eth_accounts();\n            case 'eth_coinbase':\n                return this._eth_coinbase();\n            case 'net_version':\n                return this._net_version();\n            case 'eth_chainId':\n                return this._eth_chainId();\n            default:\n                return undefined;\n        }\n    }\n    async _handleAsynchronousMethods(request) {\n        const { method } = request;\n        const params = request.params || [];\n        switch (method) {\n            case 'eth_requestAccounts':\n                return this._eth_requestAccounts();\n            case 'eth_sign':\n                return this._eth_sign(params);\n            case 'eth_ecRecover':\n                return this._eth_ecRecover(params);\n            case 'personal_sign':\n                return this._personal_sign(params);\n            case 'personal_ecRecover':\n                return this._personal_ecRecover(params);\n            case 'eth_signTransaction':\n                return this._eth_signTransaction(params);\n            case 'eth_sendRawTransaction':\n                return this._eth_sendRawTransaction(params);\n            case 'eth_sendTransaction':\n                return this._eth_sendTransaction(params);\n            case 'eth_signTypedData_v1':\n                return this._eth_signTypedData_v1(params);\n            case 'eth_signTypedData_v2':\n                return this._throwUnsupportedMethodError();\n            case 'eth_signTypedData_v3':\n                return this._eth_signTypedData_v3(params);\n            case 'eth_signTypedData_v4':\n            case 'eth_signTypedData':\n                return this._eth_signTypedData_v4(params);\n            case 'wallet_addEthereumChain':\n                return this._wallet_addEthereumChain(params);\n            case 'wallet_switchEthereumChain':\n                return this._wallet_switchEthereumChain(params);\n            case 'wallet_watchAsset':\n                return this._wallet_watchAsset(params);\n            default:\n                return this._throwUnsupportedMethodError();\n        }\n    }\n    _isKnownAddress(addressString) {\n        try {\n            const addressStr = (0, util_1.ensureAddressString)(addressString);\n            const lowercaseAddresses = this._addresses.map((address) => (0, util_1.ensureAddressString)(address));\n            return lowercaseAddresses.includes(addressStr);\n        }\n        catch (_a) {\n            // noop\n        }\n        return false;\n    }\n    _ensureKnownAddress(addressString) {\n        if (!this._isKnownAddress(addressString)) {\n            throw new Error('Unknown Ethereum address');\n        }\n    }\n    _prepareTransactionParams(tx) {\n        const fromAddress = tx.from ? (0, util_1.ensureAddressString)(tx.from) : this.selectedAddress;\n        if (!fromAddress) {\n            throw new Error('Ethereum address is unavailable');\n        }\n        this._ensureKnownAddress(fromAddress);\n        const toAddress = tx.to ? (0, util_1.ensureAddressString)(tx.to) : null;\n        const weiValue = tx.value != null ? (0, util_1.ensureBigInt)(tx.value) : BigInt(0);\n        const data = tx.data ? (0, util_1.ensureBuffer)(tx.data) : Buffer.alloc(0);\n        const nonce = tx.nonce != null ? (0, util_1.ensureIntNumber)(tx.nonce) : null;\n        const gasPriceInWei = tx.gasPrice != null ? (0, util_1.ensureBigInt)(tx.gasPrice) : null;\n        const maxFeePerGas = tx.maxFeePerGas != null ? (0, util_1.ensureBigInt)(tx.maxFeePerGas) : null;\n        const maxPriorityFeePerGas = tx.maxPriorityFeePerGas != null ? (0, util_1.ensureBigInt)(tx.maxPriorityFeePerGas) : null;\n        const gasLimit = tx.gas != null ? (0, util_1.ensureBigInt)(tx.gas) : null;\n        const chainId = tx.chainId ? (0, util_1.ensureIntNumber)(tx.chainId) : this.getChainId();\n        return {\n            fromAddress,\n            toAddress,\n            weiValue,\n            data,\n            nonce,\n            gasPriceInWei,\n            maxFeePerGas,\n            maxPriorityFeePerGas,\n            gasLimit,\n            chainId,\n        };\n    }\n    _isAuthorized() {\n        return this._addresses.length > 0;\n    }\n    _requireAuthorization() {\n        if (!this._isAuthorized()) {\n            throw error_1.standardErrors.provider.unauthorized({});\n        }\n    }\n    _throwUnsupportedMethodError() {\n        throw error_1.standardErrors.provider.unsupportedMethod({});\n    }\n    async _signEthereumMessage(message, address, addPrefix, typedDataJson) {\n        this._ensureKnownAddress(address);\n        try {\n            const relay = this.initializeRelay();\n            const res = await relay.signEthereumMessage(message, address, addPrefix, typedDataJson);\n            if ((0, Web3Response_1.isErrorResponse)(res)) {\n                throw new Error(res.errorMessage);\n            }\n            return { jsonrpc: '2.0', id: 0, result: res.result };\n        }\n        catch (err) {\n            if (typeof err.message === 'string' && err.message.match(/(denied|rejected)/i)) {\n                throw error_1.standardErrors.provider.userRejectedRequest('User denied message signature');\n            }\n            throw err;\n        }\n    }\n    async _ethereumAddressFromSignedMessage(message, signature, addPrefix) {\n        const relay = this.initializeRelay();\n        const res = await relay.ethereumAddressFromSignedMessage(message, signature, addPrefix);\n        if ((0, Web3Response_1.isErrorResponse)(res)) {\n            throw new Error(res.errorMessage);\n        }\n        return { jsonrpc: '2.0', id: 0, result: res.result };\n    }\n    _eth_accounts() {\n        return [...this._addresses];\n    }\n    _eth_coinbase() {\n        return this.selectedAddress || null;\n    }\n    _net_version() {\n        return this.getChainId().toString(10);\n    }\n    _eth_chainId() {\n        return (0, util_1.hexStringFromIntNumber)(this.getChainId());\n    }\n    getChainId() {\n        const chainIdStr = this._storage.getItem(DEFAULT_CHAIN_ID_KEY);\n        if (!chainIdStr) {\n            return (0, util_1.ensureIntNumber)(1); // default to mainnet\n        }\n        const chainId = parseInt(chainIdStr, 10);\n        return (0, util_1.ensureIntNumber)(chainId);\n    }\n    async _eth_requestAccounts() {\n        if (this._isAuthorized()) {\n            return Promise.resolve({\n                jsonrpc: '2.0',\n                id: 0,\n                result: this._addresses,\n            });\n        }\n        let res;\n        try {\n            const relay = this.initializeRelay();\n            res = await relay.requestEthereumAccounts();\n            if ((0, Web3Response_1.isErrorResponse)(res)) {\n                throw new Error(res.errorMessage);\n            }\n        }\n        catch (err) {\n            if (typeof err.message === 'string' && err.message.match(/(denied|rejected)/i)) {\n                throw error_1.standardErrors.provider.userRejectedRequest('User denied account authorization');\n            }\n            throw err;\n        }\n        if (!res.result) {\n            throw new Error('accounts received is empty');\n        }\n        this._setAddresses(res.result);\n        return { jsonrpc: '2.0', id: 0, result: this._addresses };\n    }\n    _eth_sign(params) {\n        this._requireAuthorization();\n        const address = (0, util_1.ensureAddressString)(params[0]);\n        const message = (0, util_1.ensureBuffer)(params[1]);\n        return this._signEthereumMessage(message, address, false);\n    }\n    _eth_ecRecover(params) {\n        const message = (0, util_1.ensureBuffer)(params[0]);\n        const signature = (0, util_1.ensureBuffer)(params[1]);\n        return this._ethereumAddressFromSignedMessage(message, signature, false);\n    }\n    _personal_sign(params) {\n        this._requireAuthorization();\n        const message = (0, util_1.ensureBuffer)(params[0]);\n        const address = (0, util_1.ensureAddressString)(params[1]);\n        return this._signEthereumMessage(message, address, true);\n    }\n    _personal_ecRecover(params) {\n        const message = (0, util_1.ensureBuffer)(params[0]);\n        const signature = (0, util_1.ensureBuffer)(params[1]);\n        return this._ethereumAddressFromSignedMessage(message, signature, true);\n    }\n    async _eth_signTransaction(params) {\n        this._requireAuthorization();\n        const tx = this._prepareTransactionParams(params[0] || {});\n        try {\n            const relay = this.initializeRelay();\n            const res = await relay.signEthereumTransaction(tx);\n            if ((0, Web3Response_1.isErrorResponse)(res)) {\n                throw new Error(res.errorMessage);\n            }\n            return { jsonrpc: '2.0', id: 0, result: res.result };\n        }\n        catch (err) {\n            if (typeof err.message === 'string' && err.message.match(/(denied|rejected)/i)) {\n                throw error_1.standardErrors.provider.userRejectedRequest('User denied transaction signature');\n            }\n            throw err;\n        }\n    }\n    async _eth_sendRawTransaction(params) {\n        const signedTransaction = (0, util_1.ensureBuffer)(params[0]);\n        const relay = this.initializeRelay();\n        const res = await relay.submitEthereumTransaction(signedTransaction, this.getChainId());\n        if ((0, Web3Response_1.isErrorResponse)(res)) {\n            throw new Error(res.errorMessage);\n        }\n        return { jsonrpc: '2.0', id: 0, result: res.result };\n    }\n    async _eth_sendTransaction(params) {\n        this._requireAuthorization();\n        const tx = this._prepareTransactionParams(params[0] || {});\n        try {\n            const relay = this.initializeRelay();\n            const res = await relay.signAndSubmitEthereumTransaction(tx);\n            if ((0, Web3Response_1.isErrorResponse)(res)) {\n                throw new Error(res.errorMessage);\n            }\n            return { jsonrpc: '2.0', id: 0, result: res.result };\n        }\n        catch (err) {\n            if (typeof err.message === 'string' && err.message.match(/(denied|rejected)/i)) {\n                throw error_1.standardErrors.provider.userRejectedRequest('User denied transaction signature');\n            }\n            throw err;\n        }\n    }\n    async _eth_signTypedData_v1(params) {\n        this._requireAuthorization();\n        const typedData = (0, util_1.ensureParsedJSONObject)(params[0]);\n        const address = (0, util_1.ensureAddressString)(params[1]);\n        this._ensureKnownAddress(address);\n        const message = eth_eip712_util_1.default.hashForSignTypedDataLegacy({ data: typedData });\n        const typedDataJSON = JSON.stringify(typedData, null, 2);\n        return this._signEthereumMessage(message, address, false, typedDataJSON);\n    }\n    async _eth_signTypedData_v3(params) {\n        this._requireAuthorization();\n        const address = (0, util_1.ensureAddressString)(params[0]);\n        const typedData = (0, util_1.ensureParsedJSONObject)(params[1]);\n        this._ensureKnownAddress(address);\n        const message = eth_eip712_util_1.default.hashForSignTypedData_v3({ data: typedData });\n        const typedDataJSON = JSON.stringify(typedData, null, 2);\n        return this._signEthereumMessage(message, address, false, typedDataJSON);\n    }\n    async _eth_signTypedData_v4(params) {\n        this._requireAuthorization();\n        const address = (0, util_1.ensureAddressString)(params[0]);\n        const typedData = (0, util_1.ensureParsedJSONObject)(params[1]);\n        this._ensureKnownAddress(address);\n        const message = eth_eip712_util_1.default.hashForSignTypedData_v4({ data: typedData });\n        const typedDataJSON = JSON.stringify(typedData, null, 2);\n        return this._signEthereumMessage(message, address, false, typedDataJSON);\n    }\n    async _wallet_addEthereumChain(params) {\n        var _a, _b, _c, _d;\n        const request = params[0];\n        if (((_a = request.rpcUrls) === null || _a === void 0 ? void 0 : _a.length) === 0) {\n            return {\n                jsonrpc: '2.0',\n                id: 0,\n                error: { code: 2, message: `please pass in at least 1 rpcUrl` },\n            };\n        }\n        if (!request.chainName || request.chainName.trim() === '') {\n            throw error_1.standardErrors.rpc.invalidParams('chainName is a required field');\n        }\n        if (!request.nativeCurrency) {\n            throw error_1.standardErrors.rpc.invalidParams('nativeCurrency is a required field');\n        }\n        const chainIdNumber = parseInt(request.chainId, 16);\n        const success = await this.addEthereumChain(chainIdNumber, (_b = request.rpcUrls) !== null && _b !== void 0 ? _b : [], (_c = request.blockExplorerUrls) !== null && _c !== void 0 ? _c : [], request.chainName, (_d = request.iconUrls) !== null && _d !== void 0 ? _d : [], request.nativeCurrency);\n        if (success) {\n            return { jsonrpc: '2.0', id: 0, result: null };\n        }\n        return {\n            jsonrpc: '2.0',\n            id: 0,\n            error: { code: 2, message: `unable to add ethereum chain` },\n        };\n    }\n    async _wallet_switchEthereumChain(params) {\n        const request = params[0];\n        await this.switchEthereumChain(parseInt(request.chainId, 16));\n        return { jsonrpc: '2.0', id: 0, result: null };\n    }\n    async _wallet_watchAsset(params) {\n        const request = (Array.isArray(params) ? params[0] : params);\n        if (!request.type) {\n            throw error_1.standardErrors.rpc.invalidParams('Type is required');\n        }\n        if ((request === null || request === void 0 ? void 0 : request.type) !== 'ERC20') {\n            throw error_1.standardErrors.rpc.invalidParams(`Asset of type '${request.type}' is not supported`);\n        }\n        if (!(request === null || request === void 0 ? void 0 : request.options)) {\n            throw error_1.standardErrors.rpc.invalidParams('Options are required');\n        }\n        if (!(request === null || request === void 0 ? void 0 : request.options.address)) {\n            throw error_1.standardErrors.rpc.invalidParams('Address is required');\n        }\n        const chainId = this.getChainId();\n        const { address, symbol, image, decimals } = request.options;\n        const res = await this.watchAsset(request.type, address, symbol, decimals, image, chainId);\n        return { jsonrpc: '2.0', id: 0, result: res };\n    }\n    initializeRelay() {\n        if (!this._relay) {\n            const relay = new WalletLinkRelay_1.WalletLinkRelay({\n                linkAPIUrl: constants_2.WALLETLINK_URL,\n                storage: this._storage,\n            });\n            relay.setAppInfo(this._appName, this._appLogoUrl);\n            relay.attachUI();\n            relay.setAccountsCallback((accounts, isDisconnect) => this._setAddresses(accounts, isDisconnect));\n            relay.setChainCallback((chainId, jsonRpcUrl) => {\n                this.updateProviderInfo(jsonRpcUrl, parseInt(chainId, 10));\n            });\n            this._relay = relay;\n        }\n        return this._relay;\n    }\n}\nexports.WalletLinkSigner = WalletLinkSigner;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}