{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:3001' // Update with your backend URL if different\n});\nexport const submitTransaction = async transaction => {\n  try {\n    const response = await api.post('/submit-transaction', transaction);\n    return response.data;\n  } catch (error) {\n    console.error('Error submitting transaction:', error);\n    throw error;\n  }\n};\nexport const getTransactions = async () => {\n  try {\n    const response = await api.get('/transactions');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching transactions:', error);\n    throw error;\n  }\n};\nexport const searchICDCodes = async query => {\n  try {\n    const response = await axios.get(`https://api.example.com/icd10?q=${query}`); // Replace with actual API\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching ICD codes:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","submitTransaction","transaction","response","post","data","error","console","getTransactions","get","searchICDCodes","query"],"sources":["/Users/shardingdog/billingdog/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:3001', // Update with your backend URL if different\n});\n\nexport const submitTransaction = async (transaction) => {\n  try {\n    const response = await api.post('/submit-transaction', transaction);\n    return response.data;\n  } catch (error) {\n    console.error('Error submitting transaction:', error);\n    throw error;\n  }\n};\n\nexport const getTransactions = async () => {\n  try {\n    const response = await api.get('/transactions');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching transactions:', error);\n    throw error;\n  }\n};\n\nexport const searchICDCodes = async (query) => {\n  try {\n    const response = await axios.get(`https://api.example.com/icd10?q=${query}`); // Replace with actual API\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching ICD codes:', error);\n    throw error;\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB,CAAE;AACrE,CAAC,CAAC;AAEF,OAAO,MAAMC,iBAAiB,GAAG,MAAOC,WAAW,IAAK;EACtD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,qBAAqB,EAAEF,WAAW,CAAC;IACnE,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,eAAe,GAAG,MAAAA,CAAA,KAAY;EACzC,IAAI;IACF,MAAML,QAAQ,GAAG,MAAMR,GAAG,CAACc,GAAG,CAAC,eAAe,CAAC;IAC/C,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMI,cAAc,GAAG,MAAOC,KAAK,IAAK;EAC7C,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMT,KAAK,CAACe,GAAG,CAAC,mCAAmCE,KAAK,EAAE,CAAC,CAAC,CAAC;IAC9E,OAAOR,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}