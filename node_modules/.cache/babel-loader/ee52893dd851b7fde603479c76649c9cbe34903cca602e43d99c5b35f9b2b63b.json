{"ast":null,"code":"\"use strict\";\n\n// Copyright (c) 2018-2023 Coinbase, Inc. <https://www.coinbase.com/>\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WalletLinkRelay = void 0;\nconst WalletLinkConnection_1 = require(\"./connection/WalletLinkConnection\");\nconst constants_1 = require(\"./constants\");\nconst RelayEventManager_1 = require(\"./RelayEventManager\");\nconst WalletLinkSession_1 = require(\"./type/WalletLinkSession\");\nconst Web3Response_1 = require(\"./type/Web3Response\");\nconst util_1 = require(\"./ui/components/util\");\nconst WalletLinkRelayUI_1 = require(\"./ui/WalletLinkRelayUI\");\nconst WLMobileRelayUI_1 = require(\"./ui/WLMobileRelayUI\");\nconst error_1 = require(\"../../../core/error\");\nconst util_2 = require(\"../../../core/type/util\");\nconst ScopedLocalStorage_1 = require(\"../../../util/ScopedLocalStorage\");\nclass WalletLinkRelay {\n  constructor(options) {\n    this.accountsCallback = null;\n    this.chainCallbackParams = {\n      chainId: '',\n      jsonRpcUrl: ''\n    }; // to implement distinctUntilChanged\n    this.chainCallback = null;\n    this.dappDefaultChain = 1;\n    this.isMobileWeb = (0, util_1.isMobileWeb)();\n    this.appName = '';\n    this.appLogoUrl = null;\n    this.linkedUpdated = linked => {\n      this.isLinked = linked;\n      const cachedAddresses = this.storage.getItem(constants_1.LOCAL_STORAGE_ADDRESSES_KEY);\n      if (linked) {\n        // Only set linked session variable one way\n        this._session.linked = linked;\n      }\n      this.isUnlinkedErrorState = false;\n      if (cachedAddresses) {\n        const addresses = cachedAddresses.split(' ');\n        const wasConnectedViaStandalone = this.storage.getItem('IsStandaloneSigning') === 'true';\n        if (addresses[0] !== '' && !linked && this._session.linked && !wasConnectedViaStandalone) {\n          this.isUnlinkedErrorState = true;\n        }\n      }\n    };\n    this.metadataUpdated = (key, value) => {\n      this.storage.setItem(key, value);\n    };\n    this.chainUpdated = (chainId, jsonRpcUrl) => {\n      if (this.chainCallbackParams.chainId === chainId && this.chainCallbackParams.jsonRpcUrl === jsonRpcUrl) {\n        return;\n      }\n      this.chainCallbackParams = {\n        chainId,\n        jsonRpcUrl\n      };\n      if (this.chainCallback) {\n        this.chainCallback(chainId, jsonRpcUrl);\n      }\n    };\n    this.accountUpdated = selectedAddress => {\n      if (this.accountsCallback) {\n        this.accountsCallback([selectedAddress]);\n      }\n      if (WalletLinkRelay.accountRequestCallbackIds.size > 0) {\n        // We get the ethereum address from the metadata.  If for whatever\n        // reason we don't get a response via an explicit web3 message\n        // we can still fulfill the eip1102 request.\n        Array.from(WalletLinkRelay.accountRequestCallbackIds.values()).forEach(id => {\n          const message = {\n            type: 'WEB3_RESPONSE',\n            id,\n            response: {\n              method: 'requestEthereumAccounts',\n              result: [selectedAddress]\n            }\n          };\n          this.invokeCallback(Object.assign(Object.assign({}, message), {\n            id\n          }));\n        });\n        WalletLinkRelay.accountRequestCallbackIds.clear();\n      }\n    };\n    this.resetAndReload = this.resetAndReload.bind(this);\n    this.linkAPIUrl = options.linkAPIUrl;\n    this.storage = options.storage;\n    const {\n      session,\n      ui,\n      connection\n    } = this.subscribe();\n    this._session = session;\n    this.connection = connection;\n    this.relayEventManager = new RelayEventManager_1.RelayEventManager();\n    this.ui = ui;\n  }\n  subscribe() {\n    const session = WalletLinkSession_1.WalletLinkSession.load(this.storage) || new WalletLinkSession_1.WalletLinkSession(this.storage).save();\n    const {\n      linkAPIUrl\n    } = this;\n    const connection = new WalletLinkConnection_1.WalletLinkConnection({\n      session,\n      linkAPIUrl,\n      listener: this\n    });\n    const ui = this.isMobileWeb ? new WLMobileRelayUI_1.WLMobileRelayUI() : new WalletLinkRelayUI_1.WalletLinkRelayUI();\n    connection.connect();\n    return {\n      session,\n      ui,\n      connection\n    };\n  }\n  attachUI() {\n    this.ui.attach();\n  }\n  resetAndReload() {\n    Promise.race([this.connection.setSessionMetadata('__destroyed', '1'), new Promise(resolve => setTimeout(() => resolve(null), 1000))]).then(() => {\n      this.connection.destroy();\n      /**\n       * Only clear storage if the session id we have in memory matches the one on disk\n       * Otherwise, in the case where we have 2 tabs, another tab might have cleared\n       * storage already.  In that case if we clear storage again, the user will be in\n       * a state where the first tab allows the user to connect but the session that\n       * was used isn't persisted.  This leaves the user in a state where they aren't\n       * connected to the mobile app.\n       */\n      const storedSession = WalletLinkSession_1.WalletLinkSession.load(this.storage);\n      if ((storedSession === null || storedSession === void 0 ? void 0 : storedSession.id) === this._session.id) {\n        ScopedLocalStorage_1.ScopedLocalStorage.clearAll();\n      }\n      document.location.reload();\n    }).catch(_ => {});\n  }\n  setAppInfo(appName, appLogoUrl) {\n    this.appName = appName;\n    this.appLogoUrl = appLogoUrl;\n  }\n  getStorageItem(key) {\n    return this.storage.getItem(key);\n  }\n  setStorageItem(key, value) {\n    this.storage.setItem(key, value);\n  }\n  signEthereumMessage(message, address, addPrefix, typedDataJson) {\n    return this.sendRequest({\n      method: 'signEthereumMessage',\n      params: {\n        message: (0, util_2.hexStringFromBuffer)(message, true),\n        address,\n        addPrefix,\n        typedDataJson: typedDataJson || null\n      }\n    });\n  }\n  ethereumAddressFromSignedMessage(message, signature, addPrefix) {\n    return this.sendRequest({\n      method: 'ethereumAddressFromSignedMessage',\n      params: {\n        message: (0, util_2.hexStringFromBuffer)(message, true),\n        signature: (0, util_2.hexStringFromBuffer)(signature, true),\n        addPrefix\n      }\n    });\n  }\n  signEthereumTransaction(params) {\n    return this.sendRequest({\n      method: 'signEthereumTransaction',\n      params: {\n        fromAddress: params.fromAddress,\n        toAddress: params.toAddress,\n        weiValue: (0, util_2.bigIntStringFromBigInt)(params.weiValue),\n        data: (0, util_2.hexStringFromBuffer)(params.data, true),\n        nonce: params.nonce,\n        gasPriceInWei: params.gasPriceInWei ? (0, util_2.bigIntStringFromBigInt)(params.gasPriceInWei) : null,\n        maxFeePerGas: params.gasPriceInWei ? (0, util_2.bigIntStringFromBigInt)(params.gasPriceInWei) : null,\n        maxPriorityFeePerGas: params.gasPriceInWei ? (0, util_2.bigIntStringFromBigInt)(params.gasPriceInWei) : null,\n        gasLimit: params.gasLimit ? (0, util_2.bigIntStringFromBigInt)(params.gasLimit) : null,\n        chainId: params.chainId,\n        shouldSubmit: false\n      }\n    });\n  }\n  signAndSubmitEthereumTransaction(params) {\n    return this.sendRequest({\n      method: 'signEthereumTransaction',\n      params: {\n        fromAddress: params.fromAddress,\n        toAddress: params.toAddress,\n        weiValue: (0, util_2.bigIntStringFromBigInt)(params.weiValue),\n        data: (0, util_2.hexStringFromBuffer)(params.data, true),\n        nonce: params.nonce,\n        gasPriceInWei: params.gasPriceInWei ? (0, util_2.bigIntStringFromBigInt)(params.gasPriceInWei) : null,\n        maxFeePerGas: params.maxFeePerGas ? (0, util_2.bigIntStringFromBigInt)(params.maxFeePerGas) : null,\n        maxPriorityFeePerGas: params.maxPriorityFeePerGas ? (0, util_2.bigIntStringFromBigInt)(params.maxPriorityFeePerGas) : null,\n        gasLimit: params.gasLimit ? (0, util_2.bigIntStringFromBigInt)(params.gasLimit) : null,\n        chainId: params.chainId,\n        shouldSubmit: true\n      }\n    });\n  }\n  submitEthereumTransaction(signedTransaction, chainId) {\n    return this.sendRequest({\n      method: 'submitEthereumTransaction',\n      params: {\n        signedTransaction: (0, util_2.hexStringFromBuffer)(signedTransaction, true),\n        chainId\n      }\n    });\n  }\n  scanQRCode(regExp) {\n    return this.sendRequest({\n      method: 'scanQRCode',\n      params: {\n        regExp\n      }\n    });\n  }\n  getWalletLinkSession() {\n    return this._session;\n  }\n  genericRequest(data, action) {\n    return this.sendRequest({\n      method: 'generic',\n      params: {\n        action,\n        data\n      }\n    });\n  }\n  sendGenericMessage(request) {\n    return this.sendRequest(request);\n  }\n  sendRequest(request) {\n    let hideSnackbarItem = null;\n    const id = (0, util_2.randomBytesHex)(8);\n    const cancel = error => {\n      this.publishWeb3RequestCanceledEvent(id);\n      this.handleErrorResponse(id, request.method, error);\n      hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n    };\n    return new Promise((resolve, reject) => {\n      {\n        hideSnackbarItem = this.ui.showConnecting({\n          isUnlinkedErrorState: this.isUnlinkedErrorState,\n          onCancel: cancel,\n          onResetConnection: this.resetAndReload // eslint-disable-line @typescript-eslint/unbound-method\n        });\n      }\n      this.relayEventManager.callbacks.set(id, response => {\n        hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n        if ((0, Web3Response_1.isErrorResponse)(response)) {\n          return reject(new Error(response.errorMessage));\n        }\n        resolve(response);\n      });\n      this.publishWeb3RequestEvent(id, request);\n    });\n  }\n  setAccountsCallback(accountsCallback) {\n    this.accountsCallback = accountsCallback;\n  }\n  setChainCallback(chainCallback) {\n    this.chainCallback = chainCallback;\n  }\n  setDappDefaultChainCallback(chainId) {\n    this.dappDefaultChain = chainId;\n  }\n  publishWeb3RequestEvent(id, request) {\n    const message = {\n      type: 'WEB3_REQUEST',\n      id,\n      request\n    };\n    this.publishEvent('Web3Request', message, true).then(_ => {}).catch(err => {\n      this.handleWeb3ResponseMessage({\n        type: 'WEB3_RESPONSE',\n        id: message.id,\n        response: {\n          method: request.method,\n          errorMessage: err.message\n        }\n      });\n    });\n    if (this.isMobileWeb) {\n      this.openCoinbaseWalletDeeplink(request.method);\n    }\n  }\n  // copied from MobileRelay\n  openCoinbaseWalletDeeplink(method) {\n    if (!(this.ui instanceof WLMobileRelayUI_1.WLMobileRelayUI)) return;\n    // For mobile relay requests, open the Coinbase Wallet app\n    switch (method) {\n      case 'requestEthereumAccounts': // requestEthereumAccounts is handled via popup\n      case 'switchEthereumChain':\n        // switchEthereumChain doesn't need to open the app\n        return;\n      default:\n        window.addEventListener('blur', () => {\n          window.addEventListener('focus', () => {\n            this.connection.checkUnseenEvents();\n          }, {\n            once: true\n          });\n        }, {\n          once: true\n        });\n        this.ui.openCoinbaseWalletDeeplink();\n        break;\n    }\n  }\n  publishWeb3RequestCanceledEvent(id) {\n    const message = {\n      type: 'WEB3_REQUEST_CANCELED',\n      id\n    };\n    this.publishEvent('Web3RequestCanceled', message, false).then();\n  }\n  publishEvent(event, message, callWebhook) {\n    return this.connection.publishEvent(event, message, callWebhook);\n  }\n  handleWeb3ResponseMessage(message) {\n    const {\n      response\n    } = message;\n    if (response.method === 'requestEthereumAccounts') {\n      WalletLinkRelay.accountRequestCallbackIds.forEach(id => this.invokeCallback(Object.assign(Object.assign({}, message), {\n        id\n      })));\n      WalletLinkRelay.accountRequestCallbackIds.clear();\n      return;\n    }\n    this.invokeCallback(message);\n  }\n  handleErrorResponse(id, method, error) {\n    var _a;\n    const errorMessage = (_a = error === null || error === void 0 ? void 0 : error.message) !== null && _a !== void 0 ? _a : 'Unspecified error message.';\n    this.handleWeb3ResponseMessage({\n      type: 'WEB3_RESPONSE',\n      id,\n      response: {\n        method,\n        errorMessage\n      }\n    });\n  }\n  invokeCallback(message) {\n    const callback = this.relayEventManager.callbacks.get(message.id);\n    if (callback) {\n      callback(message.response);\n      this.relayEventManager.callbacks.delete(message.id);\n    }\n  }\n  requestEthereumAccounts() {\n    const request = {\n      method: 'requestEthereumAccounts',\n      params: {\n        appName: this.appName,\n        appLogoUrl: this.appLogoUrl || null\n      }\n    };\n    const hideSnackbarItem = null;\n    const id = (0, util_2.randomBytesHex)(8);\n    return new Promise((resolve, reject) => {\n      this.relayEventManager.callbacks.set(id, response => {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n        if ((0, Web3Response_1.isErrorResponse)(response)) {\n          return reject(new Error(response.errorMessage));\n        }\n        resolve(response);\n      });\n      WalletLinkRelay.accountRequestCallbackIds.add(id);\n      this.publishWeb3RequestEvent(id, request);\n    });\n  }\n  watchAsset(type, address, symbol, decimals, image, chainId) {\n    const request = {\n      method: 'watchAsset',\n      params: {\n        type,\n        options: {\n          address,\n          symbol,\n          decimals,\n          image\n        },\n        chainId\n      }\n    };\n    let hideSnackbarItem = null;\n    const id = (0, util_2.randomBytesHex)(8);\n    const cancel = error => {\n      this.publishWeb3RequestCanceledEvent(id);\n      this.handleErrorResponse(id, request.method, error);\n      hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n    };\n    {\n      hideSnackbarItem = this.ui.showConnecting({\n        isUnlinkedErrorState: this.isUnlinkedErrorState,\n        onCancel: cancel,\n        onResetConnection: this.resetAndReload // eslint-disable-line @typescript-eslint/unbound-method\n      });\n    }\n    return new Promise((resolve, reject) => {\n      this.relayEventManager.callbacks.set(id, response => {\n        hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n        if ((0, Web3Response_1.isErrorResponse)(response)) {\n          return reject(new Error(response.errorMessage));\n        }\n        resolve(response);\n      });\n      this.publishWeb3RequestEvent(id, request);\n    });\n  }\n  addEthereumChain(chainId, rpcUrls, iconUrls, blockExplorerUrls, chainName, nativeCurrency) {\n    const request = {\n      method: 'addEthereumChain',\n      params: {\n        chainId,\n        rpcUrls,\n        blockExplorerUrls,\n        chainName,\n        iconUrls,\n        nativeCurrency\n      }\n    };\n    let hideSnackbarItem = null;\n    const id = (0, util_2.randomBytesHex)(8);\n    const cancel = error => {\n      this.publishWeb3RequestCanceledEvent(id);\n      this.handleErrorResponse(id, request.method, error);\n      hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n    };\n    {\n      hideSnackbarItem = this.ui.showConnecting({\n        isUnlinkedErrorState: this.isUnlinkedErrorState,\n        onCancel: cancel,\n        onResetConnection: this.resetAndReload // eslint-disable-line @typescript-eslint/unbound-method\n      });\n    }\n    return new Promise((resolve, reject) => {\n      this.relayEventManager.callbacks.set(id, response => {\n        hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n        if ((0, Web3Response_1.isErrorResponse)(response)) {\n          return reject(new Error(response.errorMessage));\n        }\n        resolve(response);\n      });\n      this.publishWeb3RequestEvent(id, request);\n    });\n  }\n  switchEthereumChain(chainId, address) {\n    const request = {\n      method: 'switchEthereumChain',\n      params: Object.assign({\n        chainId\n      }, {\n        address\n      })\n    };\n    const id = (0, util_2.randomBytesHex)(8);\n    return new Promise((resolve, reject) => {\n      this.relayEventManager.callbacks.set(id, response => {\n        if ((0, Web3Response_1.isErrorResponse)(response) && response.errorCode) {\n          return reject(error_1.standardErrors.provider.custom({\n            code: response.errorCode,\n            message: `Unrecognized chain ID. Try adding the chain using addEthereumChain first.`\n          }));\n        } else if ((0, Web3Response_1.isErrorResponse)(response)) {\n          return reject(new Error(response.errorMessage));\n        }\n        resolve(response);\n      });\n      this.publishWeb3RequestEvent(id, request);\n    });\n  }\n}\nexports.WalletLinkRelay = WalletLinkRelay;\nWalletLinkRelay.accountRequestCallbackIds = new Set();","map":{"version":3,"names":["Object","defineProperty","exports","value","WalletLinkRelay","WalletLinkConnection_1","require","constants_1","RelayEventManager_1","WalletLinkSession_1","Web3Response_1","util_1","WalletLinkRelayUI_1","WLMobileRelayUI_1","error_1","util_2","ScopedLocalStorage_1","constructor","options","accountsCallback","chainCallbackParams","chainId","jsonRpcUrl","chainCallback","dappDefaultChain","isMobileWeb","appName","appLogoUrl","linkedUpdated","linked","isLinked","cachedAddresses","storage","getItem","LOCAL_STORAGE_ADDRESSES_KEY","_session","isUnlinkedErrorState","addresses","split","wasConnectedViaStandalone","metadataUpdated","key","setItem","chainUpdated","accountUpdated","selectedAddress","accountRequestCallbackIds","size","Array","from","values","forEach","id","message","type","response","method","result","invokeCallback","assign","clear","resetAndReload","bind","linkAPIUrl","session","ui","connection","subscribe","relayEventManager","RelayEventManager","WalletLinkSession","load","save","WalletLinkConnection","listener","WLMobileRelayUI","WalletLinkRelayUI","connect","attachUI","attach","Promise","race","setSessionMetadata","resolve","setTimeout","then","destroy","storedSession","ScopedLocalStorage","clearAll","document","location","reload","catch","_","setAppInfo","getStorageItem","setStorageItem","signEthereumMessage","address","addPrefix","typedDataJson","sendRequest","params","hexStringFromBuffer","ethereumAddressFromSignedMessage","signature","signEthereumTransaction","fromAddress","toAddress","weiValue","bigIntStringFromBigInt","data","nonce","gasPriceInWei","maxFeePerGas","maxPriorityFeePerGas","gasLimit","shouldSubmit","signAndSubmitEthereumTransaction","submitEthereumTransaction","signedTransaction","scanQRCode","regExp","getWalletLinkSession","genericRequest","action","sendGenericMessage","request","hideSnackbarItem","randomBytesHex","cancel","error","publishWeb3RequestCanceledEvent","handleErrorResponse","reject","showConnecting","onCancel","onResetConnection","callbacks","set","isErrorResponse","Error","errorMessage","publishWeb3RequestEvent","setAccountsCallback","setChainCallback","setDappDefaultChainCallback","publishEvent","err","handleWeb3ResponseMessage","openCoinbaseWalletDeeplink","window","addEventListener","checkUnseenEvents","once","event","callWebhook","_a","callback","get","delete","requestEthereumAccounts","add","watchAsset","symbol","decimals","image","addEthereumChain","rpcUrls","iconUrls","blockExplorerUrls","chainName","nativeCurrency","switchEthereumChain","errorCode","standardErrors","provider","custom","code","Set"],"sources":["/Users/shardingdog/billingdog/node_modules/@coinbase/wallet-sdk/dist/sign/walletlink/relay/WalletLinkRelay.js"],"sourcesContent":["\"use strict\";\n// Copyright (c) 2018-2023 Coinbase, Inc. <https://www.coinbase.com/>\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletLinkRelay = void 0;\nconst WalletLinkConnection_1 = require(\"./connection/WalletLinkConnection\");\nconst constants_1 = require(\"./constants\");\nconst RelayEventManager_1 = require(\"./RelayEventManager\");\nconst WalletLinkSession_1 = require(\"./type/WalletLinkSession\");\nconst Web3Response_1 = require(\"./type/Web3Response\");\nconst util_1 = require(\"./ui/components/util\");\nconst WalletLinkRelayUI_1 = require(\"./ui/WalletLinkRelayUI\");\nconst WLMobileRelayUI_1 = require(\"./ui/WLMobileRelayUI\");\nconst error_1 = require(\"../../../core/error\");\nconst util_2 = require(\"../../../core/type/util\");\nconst ScopedLocalStorage_1 = require(\"../../../util/ScopedLocalStorage\");\nclass WalletLinkRelay {\n    constructor(options) {\n        this.accountsCallback = null;\n        this.chainCallbackParams = { chainId: '', jsonRpcUrl: '' }; // to implement distinctUntilChanged\n        this.chainCallback = null;\n        this.dappDefaultChain = 1;\n        this.isMobileWeb = (0, util_1.isMobileWeb)();\n        this.appName = '';\n        this.appLogoUrl = null;\n        this.linkedUpdated = (linked) => {\n            this.isLinked = linked;\n            const cachedAddresses = this.storage.getItem(constants_1.LOCAL_STORAGE_ADDRESSES_KEY);\n            if (linked) {\n                // Only set linked session variable one way\n                this._session.linked = linked;\n            }\n            this.isUnlinkedErrorState = false;\n            if (cachedAddresses) {\n                const addresses = cachedAddresses.split(' ');\n                const wasConnectedViaStandalone = this.storage.getItem('IsStandaloneSigning') === 'true';\n                if (addresses[0] !== '' && !linked && this._session.linked && !wasConnectedViaStandalone) {\n                    this.isUnlinkedErrorState = true;\n                }\n            }\n        };\n        this.metadataUpdated = (key, value) => {\n            this.storage.setItem(key, value);\n        };\n        this.chainUpdated = (chainId, jsonRpcUrl) => {\n            if (this.chainCallbackParams.chainId === chainId &&\n                this.chainCallbackParams.jsonRpcUrl === jsonRpcUrl) {\n                return;\n            }\n            this.chainCallbackParams = {\n                chainId,\n                jsonRpcUrl,\n            };\n            if (this.chainCallback) {\n                this.chainCallback(chainId, jsonRpcUrl);\n            }\n        };\n        this.accountUpdated = (selectedAddress) => {\n            if (this.accountsCallback) {\n                this.accountsCallback([selectedAddress]);\n            }\n            if (WalletLinkRelay.accountRequestCallbackIds.size > 0) {\n                // We get the ethereum address from the metadata.  If for whatever\n                // reason we don't get a response via an explicit web3 message\n                // we can still fulfill the eip1102 request.\n                Array.from(WalletLinkRelay.accountRequestCallbackIds.values()).forEach((id) => {\n                    const message = {\n                        type: 'WEB3_RESPONSE',\n                        id,\n                        response: {\n                            method: 'requestEthereumAccounts',\n                            result: [selectedAddress],\n                        },\n                    };\n                    this.invokeCallback(Object.assign(Object.assign({}, message), { id }));\n                });\n                WalletLinkRelay.accountRequestCallbackIds.clear();\n            }\n        };\n        this.resetAndReload = this.resetAndReload.bind(this);\n        this.linkAPIUrl = options.linkAPIUrl;\n        this.storage = options.storage;\n        const { session, ui, connection } = this.subscribe();\n        this._session = session;\n        this.connection = connection;\n        this.relayEventManager = new RelayEventManager_1.RelayEventManager();\n        this.ui = ui;\n    }\n    subscribe() {\n        const session = WalletLinkSession_1.WalletLinkSession.load(this.storage) || new WalletLinkSession_1.WalletLinkSession(this.storage).save();\n        const { linkAPIUrl } = this;\n        const connection = new WalletLinkConnection_1.WalletLinkConnection({\n            session,\n            linkAPIUrl,\n            listener: this,\n        });\n        const ui = this.isMobileWeb ? new WLMobileRelayUI_1.WLMobileRelayUI() : new WalletLinkRelayUI_1.WalletLinkRelayUI();\n        connection.connect();\n        return { session, ui, connection };\n    }\n    attachUI() {\n        this.ui.attach();\n    }\n    resetAndReload() {\n        Promise.race([\n            this.connection.setSessionMetadata('__destroyed', '1'),\n            new Promise((resolve) => setTimeout(() => resolve(null), 1000)),\n        ])\n            .then(() => {\n            this.connection.destroy();\n            /**\n             * Only clear storage if the session id we have in memory matches the one on disk\n             * Otherwise, in the case where we have 2 tabs, another tab might have cleared\n             * storage already.  In that case if we clear storage again, the user will be in\n             * a state where the first tab allows the user to connect but the session that\n             * was used isn't persisted.  This leaves the user in a state where they aren't\n             * connected to the mobile app.\n             */\n            const storedSession = WalletLinkSession_1.WalletLinkSession.load(this.storage);\n            if ((storedSession === null || storedSession === void 0 ? void 0 : storedSession.id) === this._session.id) {\n                ScopedLocalStorage_1.ScopedLocalStorage.clearAll();\n            }\n            document.location.reload();\n        })\n            .catch((_) => { });\n    }\n    setAppInfo(appName, appLogoUrl) {\n        this.appName = appName;\n        this.appLogoUrl = appLogoUrl;\n    }\n    getStorageItem(key) {\n        return this.storage.getItem(key);\n    }\n    setStorageItem(key, value) {\n        this.storage.setItem(key, value);\n    }\n    signEthereumMessage(message, address, addPrefix, typedDataJson) {\n        return this.sendRequest({\n            method: 'signEthereumMessage',\n            params: {\n                message: (0, util_2.hexStringFromBuffer)(message, true),\n                address,\n                addPrefix,\n                typedDataJson: typedDataJson || null,\n            },\n        });\n    }\n    ethereumAddressFromSignedMessage(message, signature, addPrefix) {\n        return this.sendRequest({\n            method: 'ethereumAddressFromSignedMessage',\n            params: {\n                message: (0, util_2.hexStringFromBuffer)(message, true),\n                signature: (0, util_2.hexStringFromBuffer)(signature, true),\n                addPrefix,\n            },\n        });\n    }\n    signEthereumTransaction(params) {\n        return this.sendRequest({\n            method: 'signEthereumTransaction',\n            params: {\n                fromAddress: params.fromAddress,\n                toAddress: params.toAddress,\n                weiValue: (0, util_2.bigIntStringFromBigInt)(params.weiValue),\n                data: (0, util_2.hexStringFromBuffer)(params.data, true),\n                nonce: params.nonce,\n                gasPriceInWei: params.gasPriceInWei ? (0, util_2.bigIntStringFromBigInt)(params.gasPriceInWei) : null,\n                maxFeePerGas: params.gasPriceInWei ? (0, util_2.bigIntStringFromBigInt)(params.gasPriceInWei) : null,\n                maxPriorityFeePerGas: params.gasPriceInWei\n                    ? (0, util_2.bigIntStringFromBigInt)(params.gasPriceInWei)\n                    : null,\n                gasLimit: params.gasLimit ? (0, util_2.bigIntStringFromBigInt)(params.gasLimit) : null,\n                chainId: params.chainId,\n                shouldSubmit: false,\n            },\n        });\n    }\n    signAndSubmitEthereumTransaction(params) {\n        return this.sendRequest({\n            method: 'signEthereumTransaction',\n            params: {\n                fromAddress: params.fromAddress,\n                toAddress: params.toAddress,\n                weiValue: (0, util_2.bigIntStringFromBigInt)(params.weiValue),\n                data: (0, util_2.hexStringFromBuffer)(params.data, true),\n                nonce: params.nonce,\n                gasPriceInWei: params.gasPriceInWei ? (0, util_2.bigIntStringFromBigInt)(params.gasPriceInWei) : null,\n                maxFeePerGas: params.maxFeePerGas ? (0, util_2.bigIntStringFromBigInt)(params.maxFeePerGas) : null,\n                maxPriorityFeePerGas: params.maxPriorityFeePerGas\n                    ? (0, util_2.bigIntStringFromBigInt)(params.maxPriorityFeePerGas)\n                    : null,\n                gasLimit: params.gasLimit ? (0, util_2.bigIntStringFromBigInt)(params.gasLimit) : null,\n                chainId: params.chainId,\n                shouldSubmit: true,\n            },\n        });\n    }\n    submitEthereumTransaction(signedTransaction, chainId) {\n        return this.sendRequest({\n            method: 'submitEthereumTransaction',\n            params: {\n                signedTransaction: (0, util_2.hexStringFromBuffer)(signedTransaction, true),\n                chainId,\n            },\n        });\n    }\n    scanQRCode(regExp) {\n        return this.sendRequest({\n            method: 'scanQRCode',\n            params: {\n                regExp,\n            },\n        });\n    }\n    getWalletLinkSession() {\n        return this._session;\n    }\n    genericRequest(data, action) {\n        return this.sendRequest({\n            method: 'generic',\n            params: {\n                action,\n                data,\n            },\n        });\n    }\n    sendGenericMessage(request) {\n        return this.sendRequest(request);\n    }\n    sendRequest(request) {\n        let hideSnackbarItem = null;\n        const id = (0, util_2.randomBytesHex)(8);\n        const cancel = (error) => {\n            this.publishWeb3RequestCanceledEvent(id);\n            this.handleErrorResponse(id, request.method, error);\n            hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n        };\n        return new Promise((resolve, reject) => {\n            {\n                hideSnackbarItem = this.ui.showConnecting({\n                    isUnlinkedErrorState: this.isUnlinkedErrorState,\n                    onCancel: cancel,\n                    onResetConnection: this.resetAndReload, // eslint-disable-line @typescript-eslint/unbound-method\n                });\n            }\n            this.relayEventManager.callbacks.set(id, (response) => {\n                hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n                if ((0, Web3Response_1.isErrorResponse)(response)) {\n                    return reject(new Error(response.errorMessage));\n                }\n                resolve(response);\n            });\n            this.publishWeb3RequestEvent(id, request);\n        });\n    }\n    setAccountsCallback(accountsCallback) {\n        this.accountsCallback = accountsCallback;\n    }\n    setChainCallback(chainCallback) {\n        this.chainCallback = chainCallback;\n    }\n    setDappDefaultChainCallback(chainId) {\n        this.dappDefaultChain = chainId;\n    }\n    publishWeb3RequestEvent(id, request) {\n        const message = { type: 'WEB3_REQUEST', id, request };\n        this.publishEvent('Web3Request', message, true)\n            .then((_) => { })\n            .catch((err) => {\n            this.handleWeb3ResponseMessage({\n                type: 'WEB3_RESPONSE',\n                id: message.id,\n                response: {\n                    method: request.method,\n                    errorMessage: err.message,\n                },\n            });\n        });\n        if (this.isMobileWeb) {\n            this.openCoinbaseWalletDeeplink(request.method);\n        }\n    }\n    // copied from MobileRelay\n    openCoinbaseWalletDeeplink(method) {\n        if (!(this.ui instanceof WLMobileRelayUI_1.WLMobileRelayUI))\n            return;\n        // For mobile relay requests, open the Coinbase Wallet app\n        switch (method) {\n            case 'requestEthereumAccounts': // requestEthereumAccounts is handled via popup\n            case 'switchEthereumChain': // switchEthereumChain doesn't need to open the app\n                return;\n            default:\n                window.addEventListener('blur', () => {\n                    window.addEventListener('focus', () => {\n                        this.connection.checkUnseenEvents();\n                    }, { once: true });\n                }, { once: true });\n                this.ui.openCoinbaseWalletDeeplink();\n                break;\n        }\n    }\n    publishWeb3RequestCanceledEvent(id) {\n        const message = {\n            type: 'WEB3_REQUEST_CANCELED',\n            id,\n        };\n        this.publishEvent('Web3RequestCanceled', message, false).then();\n    }\n    publishEvent(event, message, callWebhook) {\n        return this.connection.publishEvent(event, message, callWebhook);\n    }\n    handleWeb3ResponseMessage(message) {\n        const { response } = message;\n        if (response.method === 'requestEthereumAccounts') {\n            WalletLinkRelay.accountRequestCallbackIds.forEach((id) => this.invokeCallback(Object.assign(Object.assign({}, message), { id })));\n            WalletLinkRelay.accountRequestCallbackIds.clear();\n            return;\n        }\n        this.invokeCallback(message);\n    }\n    handleErrorResponse(id, method, error) {\n        var _a;\n        const errorMessage = (_a = error === null || error === void 0 ? void 0 : error.message) !== null && _a !== void 0 ? _a : 'Unspecified error message.';\n        this.handleWeb3ResponseMessage({\n            type: 'WEB3_RESPONSE',\n            id,\n            response: {\n                method,\n                errorMessage,\n            },\n        });\n    }\n    invokeCallback(message) {\n        const callback = this.relayEventManager.callbacks.get(message.id);\n        if (callback) {\n            callback(message.response);\n            this.relayEventManager.callbacks.delete(message.id);\n        }\n    }\n    requestEthereumAccounts() {\n        const request = {\n            method: 'requestEthereumAccounts',\n            params: {\n                appName: this.appName,\n                appLogoUrl: this.appLogoUrl || null,\n            },\n        };\n        const hideSnackbarItem = null;\n        const id = (0, util_2.randomBytesHex)(8);\n        return new Promise((resolve, reject) => {\n            this.relayEventManager.callbacks.set(id, (response) => {\n                // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                // @ts-ignore\n                hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n                if ((0, Web3Response_1.isErrorResponse)(response)) {\n                    return reject(new Error(response.errorMessage));\n                }\n                resolve(response);\n            });\n            WalletLinkRelay.accountRequestCallbackIds.add(id);\n            this.publishWeb3RequestEvent(id, request);\n        });\n    }\n    watchAsset(type, address, symbol, decimals, image, chainId) {\n        const request = {\n            method: 'watchAsset',\n            params: {\n                type,\n                options: {\n                    address,\n                    symbol,\n                    decimals,\n                    image,\n                },\n                chainId,\n            },\n        };\n        let hideSnackbarItem = null;\n        const id = (0, util_2.randomBytesHex)(8);\n        const cancel = (error) => {\n            this.publishWeb3RequestCanceledEvent(id);\n            this.handleErrorResponse(id, request.method, error);\n            hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n        };\n        {\n            hideSnackbarItem = this.ui.showConnecting({\n                isUnlinkedErrorState: this.isUnlinkedErrorState,\n                onCancel: cancel,\n                onResetConnection: this.resetAndReload, // eslint-disable-line @typescript-eslint/unbound-method\n            });\n        }\n        return new Promise((resolve, reject) => {\n            this.relayEventManager.callbacks.set(id, (response) => {\n                hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n                if ((0, Web3Response_1.isErrorResponse)(response)) {\n                    return reject(new Error(response.errorMessage));\n                }\n                resolve(response);\n            });\n            this.publishWeb3RequestEvent(id, request);\n        });\n    }\n    addEthereumChain(chainId, rpcUrls, iconUrls, blockExplorerUrls, chainName, nativeCurrency) {\n        const request = {\n            method: 'addEthereumChain',\n            params: {\n                chainId,\n                rpcUrls,\n                blockExplorerUrls,\n                chainName,\n                iconUrls,\n                nativeCurrency,\n            },\n        };\n        let hideSnackbarItem = null;\n        const id = (0, util_2.randomBytesHex)(8);\n        const cancel = (error) => {\n            this.publishWeb3RequestCanceledEvent(id);\n            this.handleErrorResponse(id, request.method, error);\n            hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n        };\n        {\n            hideSnackbarItem = this.ui.showConnecting({\n                isUnlinkedErrorState: this.isUnlinkedErrorState,\n                onCancel: cancel,\n                onResetConnection: this.resetAndReload, // eslint-disable-line @typescript-eslint/unbound-method\n            });\n        }\n        return new Promise((resolve, reject) => {\n            this.relayEventManager.callbacks.set(id, (response) => {\n                hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n                if ((0, Web3Response_1.isErrorResponse)(response)) {\n                    return reject(new Error(response.errorMessage));\n                }\n                resolve(response);\n            });\n            this.publishWeb3RequestEvent(id, request);\n        });\n    }\n    switchEthereumChain(chainId, address) {\n        const request = {\n            method: 'switchEthereumChain',\n            params: Object.assign({ chainId }, { address }),\n        };\n        const id = (0, util_2.randomBytesHex)(8);\n        return new Promise((resolve, reject) => {\n            this.relayEventManager.callbacks.set(id, (response) => {\n                if ((0, Web3Response_1.isErrorResponse)(response) && response.errorCode) {\n                    return reject(error_1.standardErrors.provider.custom({\n                        code: response.errorCode,\n                        message: `Unrecognized chain ID. Try adding the chain using addEthereumChain first.`,\n                    }));\n                }\n                else if ((0, Web3Response_1.isErrorResponse)(response)) {\n                    return reject(new Error(response.errorMessage));\n                }\n                resolve(response);\n            });\n            this.publishWeb3RequestEvent(id, request);\n        });\n    }\n}\nexports.WalletLinkRelay = WalletLinkRelay;\nWalletLinkRelay.accountRequestCallbackIds = new Set();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}